// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RepairCmds repair cmds
//
// swagger:model RepairCmds
type RepairCmds struct {

	// checksum
	// Required: true
	// Min Length: 1
	Checksum string `json:"checksum"`

	// cmds
	// Required: true
	Cmds []string `json:"cmds"`

	// message
	Message *string `json:"message,omitempty"`
}

// Validate validates this repair cmds
func (m *RepairCmds) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChecksum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCmds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RepairCmds) validateChecksum(formats strfmt.Registry) error {

	if err := validate.RequiredString("checksum", "body", m.Checksum); err != nil {
		return err
	}

	if err := validate.MinLength("checksum", "body", m.Checksum, 1); err != nil {
		return err
	}

	return nil
}

func (m *RepairCmds) validateCmds(formats strfmt.Registry) error {

	if err := validate.Required("cmds", "body", m.Cmds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this repair cmds based on context it is used
func (m *RepairCmds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RepairCmds) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RepairCmds) UnmarshalBinary(b []byte) error {
	var res RepairCmds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
