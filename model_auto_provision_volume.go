/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AutoProvisionVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoProvisionVolume{}

// AutoProvisionVolume struct for AutoProvisionVolume
type AutoProvisionVolume struct {
	Volume            Volume                  `json:"volume"`
	InfraPlan         *AutoProvisionInfraPlan `json:"infraPlan,omitempty"`
	CloudProvider     string                  `json:"cloudProvider"`
	AccountId         string                  `json:"accountId"`
	SshKeyName        *string                 `json:"sshKeyName,omitempty"`
	ImageId           *string                 `json:"imageId,omitempty"`
	Region            string                  `json:"region"`
	AvailabilityZones []string                `json:"availabilityZones"`
	Subnets           []string                `json:"subnets"`
	OsType            string                  `json:"osType"`
}

type _AutoProvisionVolume AutoProvisionVolume

// NewAutoProvisionVolume instantiates a new AutoProvisionVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoProvisionVolume(volume Volume, cloudProvider string, accountId string, region string, availabilityZones []string, subnets []string, osType string) *AutoProvisionVolume {
	this := AutoProvisionVolume{}
	this.Volume = volume
	this.CloudProvider = cloudProvider
	this.AccountId = accountId
	this.Region = region
	this.AvailabilityZones = availabilityZones
	this.Subnets = subnets
	this.OsType = osType
	return &this
}

// NewAutoProvisionVolumeWithDefaults instantiates a new AutoProvisionVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoProvisionVolumeWithDefaults() *AutoProvisionVolume {
	this := AutoProvisionVolume{}
	return &this
}

// GetVolume returns the Volume field value
func (o *AutoProvisionVolume) GetVolume() Volume {
	if o == nil {
		var ret Volume
		return ret
	}

	return o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetVolumeOk() (*Volume, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Volume, true
}

// SetVolume sets field value
func (o *AutoProvisionVolume) SetVolume(v Volume) {
	o.Volume = v
}

// GetInfraPlan returns the InfraPlan field value if set, zero value otherwise.
func (o *AutoProvisionVolume) GetInfraPlan() AutoProvisionInfraPlan {
	if o == nil || IsNil(o.InfraPlan) {
		var ret AutoProvisionInfraPlan
		return ret
	}
	return *o.InfraPlan
}

// GetInfraPlanOk returns a tuple with the InfraPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetInfraPlanOk() (*AutoProvisionInfraPlan, bool) {
	if o == nil || IsNil(o.InfraPlan) {
		return nil, false
	}
	return o.InfraPlan, true
}

// HasInfraPlan returns a boolean if a field has been set.
func (o *AutoProvisionVolume) HasInfraPlan() bool {
	if o != nil && !IsNil(o.InfraPlan) {
		return true
	}

	return false
}

// SetInfraPlan gets a reference to the given AutoProvisionInfraPlan and assigns it to the InfraPlan field.
func (o *AutoProvisionVolume) SetInfraPlan(v AutoProvisionInfraPlan) {
	o.InfraPlan = &v
}

// GetCloudProvider returns the CloudProvider field value
func (o *AutoProvisionVolume) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *AutoProvisionVolume) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetAccountId returns the AccountId field value
func (o *AutoProvisionVolume) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AutoProvisionVolume) SetAccountId(v string) {
	o.AccountId = v
}

// GetSshKeyName returns the SshKeyName field value if set, zero value otherwise.
func (o *AutoProvisionVolume) GetSshKeyName() string {
	if o == nil || IsNil(o.SshKeyName) {
		var ret string
		return ret
	}
	return *o.SshKeyName
}

// GetSshKeyNameOk returns a tuple with the SshKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetSshKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeyName) {
		return nil, false
	}
	return o.SshKeyName, true
}

// HasSshKeyName returns a boolean if a field has been set.
func (o *AutoProvisionVolume) HasSshKeyName() bool {
	if o != nil && !IsNil(o.SshKeyName) {
		return true
	}

	return false
}

// SetSshKeyName gets a reference to the given string and assigns it to the SshKeyName field.
func (o *AutoProvisionVolume) SetSshKeyName(v string) {
	o.SshKeyName = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *AutoProvisionVolume) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *AutoProvisionVolume) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *AutoProvisionVolume) SetImageId(v string) {
	o.ImageId = &v
}

// GetRegion returns the Region field value
func (o *AutoProvisionVolume) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AutoProvisionVolume) SetRegion(v string) {
	o.Region = v
}

// GetAvailabilityZones returns the AvailabilityZones field value
func (o *AutoProvisionVolume) GetAvailabilityZones() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// SetAvailabilityZones sets field value
func (o *AutoProvisionVolume) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

// GetSubnets returns the Subnets field value
func (o *AutoProvisionVolume) GetSubnets() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetSubnetsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subnets, true
}

// SetSubnets sets field value
func (o *AutoProvisionVolume) SetSubnets(v []string) {
	o.Subnets = v
}

// GetOsType returns the OsType field value
func (o *AutoProvisionVolume) GetOsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value
// and a boolean to check if the value has been set.
func (o *AutoProvisionVolume) GetOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsType, true
}

// SetOsType sets field value
func (o *AutoProvisionVolume) SetOsType(v string) {
	o.OsType = v
}

func (o AutoProvisionVolume) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoProvisionVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["volume"] = o.Volume
	if !IsNil(o.InfraPlan) {
		toSerialize["infraPlan"] = o.InfraPlan
	}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["accountId"] = o.AccountId
	if !IsNil(o.SshKeyName) {
		toSerialize["sshKeyName"] = o.SshKeyName
	}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	toSerialize["region"] = o.Region
	toSerialize["availabilityZones"] = o.AvailabilityZones
	toSerialize["subnets"] = o.Subnets
	toSerialize["osType"] = o.OsType
	return toSerialize, nil
}

func (o *AutoProvisionVolume) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"volume",
		"cloudProvider",
		"accountId",
		"region",
		"availabilityZones",
		"subnets",
		"osType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoProvisionVolume := _AutoProvisionVolume{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoProvisionVolume)

	if err != nil {
		return err
	}

	*o = AutoProvisionVolume(varAutoProvisionVolume)

	return err
}

type NullableAutoProvisionVolume struct {
	value *AutoProvisionVolume
	isSet bool
}

func (v NullableAutoProvisionVolume) Get() *AutoProvisionVolume {
	return v.value
}

func (v *NullableAutoProvisionVolume) Set(val *AutoProvisionVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoProvisionVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoProvisionVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoProvisionVolume(val *AutoProvisionVolume) *NullableAutoProvisionVolume {
	return &NullableAutoProvisionVolume{value: val, isSet: true}
}

func (v NullableAutoProvisionVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoProvisionVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
