/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RepairCmds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepairCmds{}

// RepairCmds struct for RepairCmds
type RepairCmds struct {
	Cmds     []string `json:"cmds"`
	Checksum string   `json:"checksum"`
	Message  *string  `json:"message,omitempty"`
}

type _RepairCmds RepairCmds

// NewRepairCmds instantiates a new RepairCmds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepairCmds(cmds []string, checksum string) *RepairCmds {
	this := RepairCmds{}
	this.Cmds = cmds
	this.Checksum = checksum
	return &this
}

// NewRepairCmdsWithDefaults instantiates a new RepairCmds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepairCmdsWithDefaults() *RepairCmds {
	this := RepairCmds{}
	return &this
}

// GetCmds returns the Cmds field value
func (o *RepairCmds) GetCmds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Cmds
}

// GetCmdsOk returns a tuple with the Cmds field value
// and a boolean to check if the value has been set.
func (o *RepairCmds) GetCmdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cmds, true
}

// SetCmds sets field value
func (o *RepairCmds) SetCmds(v []string) {
	o.Cmds = v
}

// GetChecksum returns the Checksum field value
func (o *RepairCmds) GetChecksum() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value
// and a boolean to check if the value has been set.
func (o *RepairCmds) GetChecksumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Checksum, true
}

// SetChecksum sets field value
func (o *RepairCmds) SetChecksum(v string) {
	o.Checksum = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RepairCmds) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepairCmds) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RepairCmds) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RepairCmds) SetMessage(v string) {
	o.Message = &v
}

func (o RepairCmds) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepairCmds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cmds"] = o.Cmds
	toSerialize["checksum"] = o.Checksum
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

func (o *RepairCmds) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cmds",
		"checksum",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRepairCmds := _RepairCmds{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRepairCmds)

	if err != nil {
		return err
	}

	*o = RepairCmds(varRepairCmds)

	return err
}

type NullableRepairCmds struct {
	value *RepairCmds
	isSet bool
}

func (v NullableRepairCmds) Get() *RepairCmds {
	return v.value
}

func (v *NullableRepairCmds) Set(val *RepairCmds) {
	v.value = val
	v.isSet = true
}

func (v NullableRepairCmds) IsSet() bool {
	return v.isSet
}

func (v *NullableRepairCmds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepairCmds(val *RepairCmds) *NullableRepairCmds {
	return &NullableRepairCmds{value: val, isSet: true}
}

func (v NullableRepairCmds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepairCmds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
