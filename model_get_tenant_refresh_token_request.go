/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetTenantRefreshTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantRefreshTokenRequest{}

// GetTenantRefreshTokenRequest struct for GetTenantRefreshTokenRequest
type GetTenantRefreshTokenRequest struct {
	Accesstoken string  `json:"accesstoken"`
	Hostname    string  `json:"hostname"`
	Tenantid    *string `json:"tenantid,omitempty"`
}

type _GetTenantRefreshTokenRequest GetTenantRefreshTokenRequest

// NewGetTenantRefreshTokenRequest instantiates a new GetTenantRefreshTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantRefreshTokenRequest(accesstoken string, hostname string) *GetTenantRefreshTokenRequest {
	this := GetTenantRefreshTokenRequest{}
	this.Accesstoken = accesstoken
	this.Hostname = hostname
	return &this
}

// NewGetTenantRefreshTokenRequestWithDefaults instantiates a new GetTenantRefreshTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantRefreshTokenRequestWithDefaults() *GetTenantRefreshTokenRequest {
	this := GetTenantRefreshTokenRequest{}
	return &this
}

// GetAccesstoken returns the Accesstoken field value
func (o *GetTenantRefreshTokenRequest) GetAccesstoken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Accesstoken
}

// GetAccesstokenOk returns a tuple with the Accesstoken field value
// and a boolean to check if the value has been set.
func (o *GetTenantRefreshTokenRequest) GetAccesstokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Accesstoken, true
}

// SetAccesstoken sets field value
func (o *GetTenantRefreshTokenRequest) SetAccesstoken(v string) {
	o.Accesstoken = v
}

// GetHostname returns the Hostname field value
func (o *GetTenantRefreshTokenRequest) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *GetTenantRefreshTokenRequest) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *GetTenantRefreshTokenRequest) SetHostname(v string) {
	o.Hostname = v
}

// GetTenantid returns the Tenantid field value if set, zero value otherwise.
func (o *GetTenantRefreshTokenRequest) GetTenantid() string {
	if o == nil || IsNil(o.Tenantid) {
		var ret string
		return ret
	}
	return *o.Tenantid
}

// GetTenantidOk returns a tuple with the Tenantid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantRefreshTokenRequest) GetTenantidOk() (*string, bool) {
	if o == nil || IsNil(o.Tenantid) {
		return nil, false
	}
	return o.Tenantid, true
}

// HasTenantid returns a boolean if a field has been set.
func (o *GetTenantRefreshTokenRequest) HasTenantid() bool {
	if o != nil && !IsNil(o.Tenantid) {
		return true
	}

	return false
}

// SetTenantid gets a reference to the given string and assigns it to the Tenantid field.
func (o *GetTenantRefreshTokenRequest) SetTenantid(v string) {
	o.Tenantid = &v
}

func (o GetTenantRefreshTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantRefreshTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accesstoken"] = o.Accesstoken
	toSerialize["hostname"] = o.Hostname
	if !IsNil(o.Tenantid) {
		toSerialize["tenantid"] = o.Tenantid
	}
	return toSerialize, nil
}

func (o *GetTenantRefreshTokenRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accesstoken",
		"hostname",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTenantRefreshTokenRequest := _GetTenantRefreshTokenRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTenantRefreshTokenRequest)

	if err != nil {
		return err
	}

	*o = GetTenantRefreshTokenRequest(varGetTenantRefreshTokenRequest)

	return err
}

type NullableGetTenantRefreshTokenRequest struct {
	value *GetTenantRefreshTokenRequest
	isSet bool
}

func (v NullableGetTenantRefreshTokenRequest) Get() *GetTenantRefreshTokenRequest {
	return v.value
}

func (v *NullableGetTenantRefreshTokenRequest) Set(val *GetTenantRefreshTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantRefreshTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantRefreshTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantRefreshTokenRequest(val *GetTenantRefreshTokenRequest) *NullableGetTenantRefreshTokenRequest {
	return &NullableGetTenantRefreshTokenRequest{value: val, isSet: true}
}

func (v NullableGetTenantRefreshTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantRefreshTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
