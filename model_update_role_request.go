/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the UpdateRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRoleRequest{}

// UpdateRoleRequest struct for UpdateRoleRequest
type UpdateRoleRequest struct {
	CloudProvider *CloudProviderType      `json:"cloudProvider,omitempty"`
	AwsRole       *UpdateAwsRoleRequest   `json:"awsRole,omitempty"`
	AzureRole     *UpdateAzureRoleRequest `json:"azureRole,omitempty"`
}

// NewUpdateRoleRequest instantiates a new UpdateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRoleRequest() *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	return &this
}

// NewUpdateRoleRequestWithDefaults instantiates a new UpdateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRoleRequestWithDefaults() *UpdateRoleRequest {
	this := UpdateRoleRequest{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *UpdateRoleRequest) GetCloudProvider() CloudProviderType {
	if o == nil || IsNil(o.CloudProvider) {
		var ret CloudProviderType
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleRequest) GetCloudProviderOk() (*CloudProviderType, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *UpdateRoleRequest) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given CloudProviderType and assigns it to the CloudProvider field.
func (o *UpdateRoleRequest) SetCloudProvider(v CloudProviderType) {
	o.CloudProvider = &v
}

// GetAwsRole returns the AwsRole field value if set, zero value otherwise.
func (o *UpdateRoleRequest) GetAwsRole() UpdateAwsRoleRequest {
	if o == nil || IsNil(o.AwsRole) {
		var ret UpdateAwsRoleRequest
		return ret
	}
	return *o.AwsRole
}

// GetAwsRoleOk returns a tuple with the AwsRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleRequest) GetAwsRoleOk() (*UpdateAwsRoleRequest, bool) {
	if o == nil || IsNil(o.AwsRole) {
		return nil, false
	}
	return o.AwsRole, true
}

// HasAwsRole returns a boolean if a field has been set.
func (o *UpdateRoleRequest) HasAwsRole() bool {
	if o != nil && !IsNil(o.AwsRole) {
		return true
	}

	return false
}

// SetAwsRole gets a reference to the given UpdateAwsRoleRequest and assigns it to the AwsRole field.
func (o *UpdateRoleRequest) SetAwsRole(v UpdateAwsRoleRequest) {
	o.AwsRole = &v
}

// GetAzureRole returns the AzureRole field value if set, zero value otherwise.
func (o *UpdateRoleRequest) GetAzureRole() UpdateAzureRoleRequest {
	if o == nil || IsNil(o.AzureRole) {
		var ret UpdateAzureRoleRequest
		return ret
	}
	return *o.AzureRole
}

// GetAzureRoleOk returns a tuple with the AzureRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateRoleRequest) GetAzureRoleOk() (*UpdateAzureRoleRequest, bool) {
	if o == nil || IsNil(o.AzureRole) {
		return nil, false
	}
	return o.AzureRole, true
}

// HasAzureRole returns a boolean if a field has been set.
func (o *UpdateRoleRequest) HasAzureRole() bool {
	if o != nil && !IsNil(o.AzureRole) {
		return true
	}

	return false
}

// SetAzureRole gets a reference to the given UpdateAzureRoleRequest and assigns it to the AzureRole field.
func (o *UpdateRoleRequest) SetAzureRole(v UpdateAzureRoleRequest) {
	o.AzureRole = &v
}

func (o UpdateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.AwsRole) {
		toSerialize["awsRole"] = o.AwsRole
	}
	if !IsNil(o.AzureRole) {
		toSerialize["azureRole"] = o.AzureRole
	}
	return toSerialize, nil
}

type NullableUpdateRoleRequest struct {
	value *UpdateRoleRequest
	isSet bool
}

func (v NullableUpdateRoleRequest) Get() *UpdateRoleRequest {
	return v.value
}

func (v *NullableUpdateRoleRequest) Set(val *UpdateRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRoleRequest(val *UpdateRoleRequest) *NullableUpdateRoleRequest {
	return &NullableUpdateRoleRequest{value: val, isSet: true}
}

func (v NullableUpdateRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
