/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the GetTenantSettingsResponseDeclarative type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantSettingsResponseDeclarative{}

// GetTenantSettingsResponseDeclarative struct for GetTenantSettingsResponseDeclarative
type GetTenantSettingsResponseDeclarative struct {
	FaultDomainCount NullableInt32 `json:"faultDomainCount,omitempty"`
}

// NewGetTenantSettingsResponseDeclarative instantiates a new GetTenantSettingsResponseDeclarative object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantSettingsResponseDeclarative() *GetTenantSettingsResponseDeclarative {
	this := GetTenantSettingsResponseDeclarative{}
	return &this
}

// NewGetTenantSettingsResponseDeclarativeWithDefaults instantiates a new GetTenantSettingsResponseDeclarative object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantSettingsResponseDeclarativeWithDefaults() *GetTenantSettingsResponseDeclarative {
	this := GetTenantSettingsResponseDeclarative{}
	return &this
}

// GetFaultDomainCount returns the FaultDomainCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseDeclarative) GetFaultDomainCount() int32 {
	if o == nil || IsNil(o.FaultDomainCount.Get()) {
		var ret int32
		return ret
	}
	return *o.FaultDomainCount.Get()
}

// GetFaultDomainCountOk returns a tuple with the FaultDomainCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseDeclarative) GetFaultDomainCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FaultDomainCount.Get(), o.FaultDomainCount.IsSet()
}

// HasFaultDomainCount returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseDeclarative) HasFaultDomainCount() bool {
	if o != nil && o.FaultDomainCount.IsSet() {
		return true
	}

	return false
}

// SetFaultDomainCount gets a reference to the given NullableInt32 and assigns it to the FaultDomainCount field.
func (o *GetTenantSettingsResponseDeclarative) SetFaultDomainCount(v int32) {
	o.FaultDomainCount.Set(&v)
}

// SetFaultDomainCountNil sets the value for FaultDomainCount to be an explicit nil
func (o *GetTenantSettingsResponseDeclarative) SetFaultDomainCountNil() {
	o.FaultDomainCount.Set(nil)
}

// UnsetFaultDomainCount ensures that no value is present for FaultDomainCount, not even an explicit nil
func (o *GetTenantSettingsResponseDeclarative) UnsetFaultDomainCount() {
	o.FaultDomainCount.Unset()
}

func (o GetTenantSettingsResponseDeclarative) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantSettingsResponseDeclarative) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FaultDomainCount.IsSet() {
		toSerialize["faultDomainCount"] = o.FaultDomainCount.Get()
	}
	return toSerialize, nil
}

type NullableGetTenantSettingsResponseDeclarative struct {
	value *GetTenantSettingsResponseDeclarative
	isSet bool
}

func (v NullableGetTenantSettingsResponseDeclarative) Get() *GetTenantSettingsResponseDeclarative {
	return v.value
}

func (v *NullableGetTenantSettingsResponseDeclarative) Set(val *GetTenantSettingsResponseDeclarative) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantSettingsResponseDeclarative) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantSettingsResponseDeclarative) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantSettingsResponseDeclarative(val *GetTenantSettingsResponseDeclarative) *NullableGetTenantSettingsResponseDeclarative {
	return &NullableGetTenantSettingsResponseDeclarative{value: val, isSet: true}
}

func (v NullableGetTenantSettingsResponseDeclarative) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantSettingsResponseDeclarative) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
