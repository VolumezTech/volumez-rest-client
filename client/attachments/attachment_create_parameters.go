// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// NewAttachmentCreateParams creates a new AttachmentCreateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAttachmentCreateParams() *AttachmentCreateParams {
	return &AttachmentCreateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAttachmentCreateParamsWithTimeout creates a new AttachmentCreateParams object
// with the ability to set a timeout on a request.
func NewAttachmentCreateParamsWithTimeout(timeout time.Duration) *AttachmentCreateParams {
	return &AttachmentCreateParams{
		timeout: timeout,
	}
}

// NewAttachmentCreateParamsWithContext creates a new AttachmentCreateParams object
// with the ability to set a context for a request.
func NewAttachmentCreateParamsWithContext(ctx context.Context) *AttachmentCreateParams {
	return &AttachmentCreateParams{
		Context: ctx,
	}
}

// NewAttachmentCreateParamsWithHTTPClient creates a new AttachmentCreateParams object
// with the ability to set a custom HTTPClient for a request.
func NewAttachmentCreateParamsWithHTTPClient(client *http.Client) *AttachmentCreateParams {
	return &AttachmentCreateParams{
		HTTPClient: client,
	}
}

/* AttachmentCreateParams contains all the parameters to send to the API endpoint
   for the attachment create operation.

   Typically these are written to a http.Request.
*/
type AttachmentCreateParams struct {

	// Authorization.
	Authorization *string

	/* Body.

	   An Attachment object
	*/
	Body *models.Attachment

	// Snapshot.
	Snapshot string

	// Volume.
	Volume string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the attachment create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachmentCreateParams) WithDefaults() *AttachmentCreateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the attachment create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachmentCreateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the attachment create params
func (o *AttachmentCreateParams) WithTimeout(timeout time.Duration) *AttachmentCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the attachment create params
func (o *AttachmentCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the attachment create params
func (o *AttachmentCreateParams) WithContext(ctx context.Context) *AttachmentCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the attachment create params
func (o *AttachmentCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the attachment create params
func (o *AttachmentCreateParams) WithHTTPClient(client *http.Client) *AttachmentCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the attachment create params
func (o *AttachmentCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the attachment create params
func (o *AttachmentCreateParams) WithAuthorization(authorization *string) *AttachmentCreateParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the attachment create params
func (o *AttachmentCreateParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithBody adds the body to the attachment create params
func (o *AttachmentCreateParams) WithBody(body *models.Attachment) *AttachmentCreateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the attachment create params
func (o *AttachmentCreateParams) SetBody(body *models.Attachment) {
	o.Body = body
}

// WithSnapshot adds the snapshot to the attachment create params
func (o *AttachmentCreateParams) WithSnapshot(snapshot string) *AttachmentCreateParams {
	o.SetSnapshot(snapshot)
	return o
}

// SetSnapshot adds the snapshot to the attachment create params
func (o *AttachmentCreateParams) SetSnapshot(snapshot string) {
	o.Snapshot = snapshot
}

// WithVolume adds the volume to the attachment create params
func (o *AttachmentCreateParams) WithVolume(volume string) *AttachmentCreateParams {
	o.SetVolume(volume)
	return o
}

// SetVolume adds the volume to the attachment create params
func (o *AttachmentCreateParams) SetVolume(volume string) {
	o.Volume = volume
}

// WriteToRequest writes these params to a swagger request
func (o *AttachmentCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param authorization
		if err := r.SetHeaderParam("authorization", *o.Authorization); err != nil {
			return err
		}
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param snapshot
	if err := r.SetPathParam("snapshot", o.Snapshot); err != nil {
		return err
	}

	// path param volume
	if err := r.SetPathParam("volume", o.Volume); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
