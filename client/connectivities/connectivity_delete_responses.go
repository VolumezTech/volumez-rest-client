// Code generated by go-swagger; DO NOT EDIT.

package connectivities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// ConnectivityDeleteReader is a Reader for the ConnectivityDelete structure.
type ConnectivityDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectivityDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectivityDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewConnectivityDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectivityDeleteOK creates a ConnectivityDeleteOK with default headers values
func NewConnectivityDeleteOK() *ConnectivityDeleteOK {
	return &ConnectivityDeleteOK{}
}

/*
ConnectivityDeleteOK describes a response with status code 200, with default header values.

A connectivity was deleted successfully
*/
type ConnectivityDeleteOK struct {
	Payload *models.RegularResponse
}

// IsSuccess returns true when this connectivity delete o k response has a 2xx status code
func (o *ConnectivityDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this connectivity delete o k response has a 3xx status code
func (o *ConnectivityDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connectivity delete o k response has a 4xx status code
func (o *ConnectivityDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this connectivity delete o k response has a 5xx status code
func (o *ConnectivityDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this connectivity delete o k response a status code equal to that given
func (o *ConnectivityDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the connectivity delete o k response
func (o *ConnectivityDeleteOK) Code() int {
	return 200
}

func (o *ConnectivityDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /connectivities/{connectivity}][%d] connectivityDeleteOK  %+v", 200, o.Payload)
}

func (o *ConnectivityDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /connectivities/{connectivity}][%d] connectivityDeleteOK  %+v", 200, o.Payload)
}

func (o *ConnectivityDeleteOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *ConnectivityDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectivityDeleteDefault creates a ConnectivityDeleteDefault with default headers values
func NewConnectivityDeleteDefault(code int) *ConnectivityDeleteDefault {
	return &ConnectivityDeleteDefault{
		_statusCode: code,
	}
}

/*
ConnectivityDeleteDefault describes a response with status code -1, with default header values.

Error deleting a connectivity
*/
type ConnectivityDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this connectivity delete default response has a 2xx status code
func (o *ConnectivityDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this connectivity delete default response has a 3xx status code
func (o *ConnectivityDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this connectivity delete default response has a 4xx status code
func (o *ConnectivityDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this connectivity delete default response has a 5xx status code
func (o *ConnectivityDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this connectivity delete default response a status code equal to that given
func (o *ConnectivityDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the connectivity delete default response
func (o *ConnectivityDeleteDefault) Code() int {
	return o._statusCode
}

func (o *ConnectivityDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /connectivities/{connectivity}][%d] ConnectivityDelete default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectivityDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /connectivities/{connectivity}][%d] ConnectivityDelete default  %+v", o._statusCode, o.Payload)
}

func (o *ConnectivityDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConnectivityDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
