// Code generated by go-swagger; DO NOT EDIT.

package connectivities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// ConnectivityGetReader is a Reader for the ConnectivityGet structure.
type ConnectivityGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectivityGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectivityGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewConnectivityGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewConnectivityGetOK creates a ConnectivityGetOK with default headers values
func NewConnectivityGetOK() *ConnectivityGetOK {
	return &ConnectivityGetOK{}
}

/*
ConnectivityGetOK describes a response with status code 200, with default header values.

Properties of a connectivity
*/
type ConnectivityGetOK struct {
	Payload *models.Connectivity
}

// IsSuccess returns true when this connectivity get o k response has a 2xx status code
func (o *ConnectivityGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this connectivity get o k response has a 3xx status code
func (o *ConnectivityGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this connectivity get o k response has a 4xx status code
func (o *ConnectivityGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this connectivity get o k response has a 5xx status code
func (o *ConnectivityGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this connectivity get o k response a status code equal to that given
func (o *ConnectivityGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the connectivity get o k response
func (o *ConnectivityGetOK) Code() int {
	return 200
}

func (o *ConnectivityGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /connectivities/{connectivity}][%d] connectivityGetOK %s", 200, payload)
}

func (o *ConnectivityGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /connectivities/{connectivity}][%d] connectivityGetOK %s", 200, payload)
}

func (o *ConnectivityGetOK) GetPayload() *models.Connectivity {
	return o.Payload
}

func (o *ConnectivityGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Connectivity)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectivityGetDefault creates a ConnectivityGetDefault with default headers values
func NewConnectivityGetDefault(code int) *ConnectivityGetDefault {
	return &ConnectivityGetDefault{
		_statusCode: code,
	}
}

/*
ConnectivityGetDefault describes a response with status code -1, with default header values.

Error getting properties of a connectivity
*/
type ConnectivityGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this connectivity get default response has a 2xx status code
func (o *ConnectivityGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this connectivity get default response has a 3xx status code
func (o *ConnectivityGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this connectivity get default response has a 4xx status code
func (o *ConnectivityGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this connectivity get default response has a 5xx status code
func (o *ConnectivityGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this connectivity get default response a status code equal to that given
func (o *ConnectivityGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the connectivity get default response
func (o *ConnectivityGetDefault) Code() int {
	return o._statusCode
}

func (o *ConnectivityGetDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /connectivities/{connectivity}][%d] ConnectivityGet default %s", o._statusCode, payload)
}

func (o *ConnectivityGetDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /connectivities/{connectivity}][%d] ConnectivityGet default %s", o._statusCode, payload)
}

func (o *ConnectivityGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ConnectivityGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
