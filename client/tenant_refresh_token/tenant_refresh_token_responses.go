// Code generated by go-swagger; DO NOT EDIT.

package tenant_refresh_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// TenantRefreshTokenReader is a Reader for the TenantRefreshToken structure.
type TenantRefreshTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TenantRefreshTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTenantRefreshTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewTenantRefreshTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewTenantRefreshTokenDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTenantRefreshTokenOK creates a TenantRefreshTokenOK with default headers values
func NewTenantRefreshTokenOK() *TenantRefreshTokenOK {
	return &TenantRefreshTokenOK{}
}

/*
	TenantRefreshTokenOK describes a response with status code 200, with default header values.

Refresh Token
*/
type TenantRefreshTokenOK struct {
	Payload *models.RefreshToken
}

func (o *TenantRefreshTokenOK) Error() string {
	return fmt.Sprintf("[POST /tenant/refreshtoken][%d] tenantRefreshTokenOK  %+v", 200, o.Payload)
}
func (o *TenantRefreshTokenOK) GetPayload() *models.RefreshToken {
	return o.Payload
}

func (o *TenantRefreshTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RefreshToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTenantRefreshTokenInternalServerError creates a TenantRefreshTokenInternalServerError with default headers values
func NewTenantRefreshTokenInternalServerError() *TenantRefreshTokenInternalServerError {
	return &TenantRefreshTokenInternalServerError{}
}

/*
	TenantRefreshTokenInternalServerError describes a response with status code 500, with default header values.

Error getting Tenant's Refresh Token
*/
type TenantRefreshTokenInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *TenantRefreshTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tenant/refreshtoken][%d] tenantRefreshTokenInternalServerError  %+v", 500, o.Payload)
}
func (o *TenantRefreshTokenInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TenantRefreshTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTenantRefreshTokenDefault creates a TenantRefreshTokenDefault with default headers values
func NewTenantRefreshTokenDefault(code int) *TenantRefreshTokenDefault {
	return &TenantRefreshTokenDefault{
		_statusCode: code,
	}
}

/*
	TenantRefreshTokenDefault describes a response with status code -1, with default header values.

Error getting Tenant's Refresh Token
*/
type TenantRefreshTokenDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the tenant refresh token default response
func (o *TenantRefreshTokenDefault) Code() int {
	return o._statusCode
}

func (o *TenantRefreshTokenDefault) Error() string {
	return fmt.Sprintf("[POST /tenant/refreshtoken][%d] TenantRefreshToken default  %+v", o._statusCode, o.Payload)
}
func (o *TenantRefreshTokenDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TenantRefreshTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
