// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPolicyPlanParams creates a new PolicyPlanParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPolicyPlanParams() *PolicyPlanParams {
	return &PolicyPlanParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPolicyPlanParamsWithTimeout creates a new PolicyPlanParams object
// with the ability to set a timeout on a request.
func NewPolicyPlanParamsWithTimeout(timeout time.Duration) *PolicyPlanParams {
	return &PolicyPlanParams{
		timeout: timeout,
	}
}

// NewPolicyPlanParamsWithContext creates a new PolicyPlanParams object
// with the ability to set a context for a request.
func NewPolicyPlanParamsWithContext(ctx context.Context) *PolicyPlanParams {
	return &PolicyPlanParams{
		Context: ctx,
	}
}

// NewPolicyPlanParamsWithHTTPClient creates a new PolicyPlanParams object
// with the ability to set a custom HTTPClient for a request.
func NewPolicyPlanParamsWithHTTPClient(client *http.Client) *PolicyPlanParams {
	return &PolicyPlanParams{
		HTTPClient: client,
	}
}

/* PolicyPlanParams contains all the parameters to send to the API endpoint
   for the policy plan operation.

   Typically these are written to a http.Request.
*/
type PolicyPlanParams struct {

	// Policy.
	Policy string

	// Size.
	Size int64

	// Zone.
	Zone string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the policy plan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PolicyPlanParams) WithDefaults() *PolicyPlanParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the policy plan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PolicyPlanParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the policy plan params
func (o *PolicyPlanParams) WithTimeout(timeout time.Duration) *PolicyPlanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the policy plan params
func (o *PolicyPlanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the policy plan params
func (o *PolicyPlanParams) WithContext(ctx context.Context) *PolicyPlanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the policy plan params
func (o *PolicyPlanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the policy plan params
func (o *PolicyPlanParams) WithHTTPClient(client *http.Client) *PolicyPlanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the policy plan params
func (o *PolicyPlanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPolicy adds the policy to the policy plan params
func (o *PolicyPlanParams) WithPolicy(policy string) *PolicyPlanParams {
	o.SetPolicy(policy)
	return o
}

// SetPolicy adds the policy to the policy plan params
func (o *PolicyPlanParams) SetPolicy(policy string) {
	o.Policy = policy
}

// WithSize adds the size to the policy plan params
func (o *PolicyPlanParams) WithSize(size int64) *PolicyPlanParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the policy plan params
func (o *PolicyPlanParams) SetSize(size int64) {
	o.Size = size
}

// WithZone adds the zone to the policy plan params
func (o *PolicyPlanParams) WithZone(zone string) *PolicyPlanParams {
	o.SetZone(zone)
	return o
}

// SetZone adds the zone to the policy plan params
func (o *PolicyPlanParams) SetZone(zone string) {
	o.Zone = zone
}

// WriteToRequest writes these params to a swagger request
func (o *PolicyPlanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param policy
	if err := r.SetPathParam("policy", o.Policy); err != nil {
		return err
	}

	// path param size
	if err := r.SetPathParam("size", swag.FormatInt64(o.Size)); err != nil {
		return err
	}

	// path param zone
	if err := r.SetPathParam("zone", o.Zone); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
