// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// NodeRepairReader is a Reader for the NodeRepair structure.
type NodeRepairReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeRepairReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeRepairOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNodeRepairBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNodeRepairNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewNodeRepairDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodeRepairOK creates a NodeRepairOK with default headers values
func NewNodeRepairOK() *NodeRepairOK {
	return &NodeRepairOK{}
}

/*
	NodeRepairOK describes a response with status code 200, with default header values.

Node Repair job was created successfully
*/
type NodeRepairOK struct {
	Payload *models.RegularResponse
}

func (o *NodeRepairOK) Error() string {
	return fmt.Sprintf("[POST /nodes/repair/{node}/{tenant}][%d] nodeRepairOK  %+v", 200, o.Payload)
}
func (o *NodeRepairOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *NodeRepairOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeRepairBadRequest creates a NodeRepairBadRequest with default headers values
func NewNodeRepairBadRequest() *NodeRepairBadRequest {
	return &NodeRepairBadRequest{}
}

/*
	NodeRepairBadRequest describes a response with status code 400, with default header values.

Invalid node name supplied
*/
type NodeRepairBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *NodeRepairBadRequest) Error() string {
	return fmt.Sprintf("[POST /nodes/repair/{node}/{tenant}][%d] nodeRepairBadRequest  %+v", 400, o.Payload)
}
func (o *NodeRepairBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeRepairBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeRepairNotFound creates a NodeRepairNotFound with default headers values
func NewNodeRepairNotFound() *NodeRepairNotFound {
	return &NodeRepairNotFound{}
}

/*
	NodeRepairNotFound describes a response with status code 404, with default header values.

Node not found
*/
type NodeRepairNotFound struct {
	Payload *models.ErrorResponse
}

func (o *NodeRepairNotFound) Error() string {
	return fmt.Sprintf("[POST /nodes/repair/{node}/{tenant}][%d] nodeRepairNotFound  %+v", 404, o.Payload)
}
func (o *NodeRepairNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeRepairNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeRepairDefault creates a NodeRepairDefault with default headers values
func NewNodeRepairDefault(code int) *NodeRepairDefault {
	return &NodeRepairDefault{
		_statusCode: code,
	}
}

/*
	NodeRepairDefault describes a response with status code -1, with default header values.

Error trying to create node repair job
*/
type NodeRepairDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the node repair default response
func (o *NodeRepairDefault) Code() int {
	return o._statusCode
}

func (o *NodeRepairDefault) Error() string {
	return fmt.Sprintf("[POST /nodes/repair/{node}/{tenant}][%d] NodeRepair default  %+v", o._statusCode, o.Payload)
}
func (o *NodeRepairDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeRepairDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
