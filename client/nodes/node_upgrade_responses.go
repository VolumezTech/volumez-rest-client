// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// NodeUpgradeReader is a Reader for the NodeUpgrade structure.
type NodeUpgradeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeUpgradeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeUpgradeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNodeUpgradeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNodeUpgradeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewNodeUpgradeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodeUpgradeOK creates a NodeUpgradeOK with default headers values
func NewNodeUpgradeOK() *NodeUpgradeOK {
	return &NodeUpgradeOK{}
}

/*
	NodeUpgradeOK describes a response with status code 200, with default header values.

Node upgrade started successfully
*/
type NodeUpgradeOK struct {
	Payload *models.RegularResponse
}

func (o *NodeUpgradeOK) Error() string {
	return fmt.Sprintf("[POST /nodes/upgrade/{node}][%d] nodeUpgradeOK  %+v", 200, o.Payload)
}
func (o *NodeUpgradeOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *NodeUpgradeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeUpgradeBadRequest creates a NodeUpgradeBadRequest with default headers values
func NewNodeUpgradeBadRequest() *NodeUpgradeBadRequest {
	return &NodeUpgradeBadRequest{}
}

/*
	NodeUpgradeBadRequest describes a response with status code 400, with default header values.

Invalid node name supplied
*/
type NodeUpgradeBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *NodeUpgradeBadRequest) Error() string {
	return fmt.Sprintf("[POST /nodes/upgrade/{node}][%d] nodeUpgradeBadRequest  %+v", 400, o.Payload)
}
func (o *NodeUpgradeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeUpgradeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeUpgradeNotFound creates a NodeUpgradeNotFound with default headers values
func NewNodeUpgradeNotFound() *NodeUpgradeNotFound {
	return &NodeUpgradeNotFound{}
}

/*
	NodeUpgradeNotFound describes a response with status code 404, with default header values.

Node not found
*/
type NodeUpgradeNotFound struct {
	Payload *models.ErrorResponse
}

func (o *NodeUpgradeNotFound) Error() string {
	return fmt.Sprintf("[POST /nodes/upgrade/{node}][%d] nodeUpgradeNotFound  %+v", 404, o.Payload)
}
func (o *NodeUpgradeNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeUpgradeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeUpgradeDefault creates a NodeUpgradeDefault with default headers values
func NewNodeUpgradeDefault(code int) *NodeUpgradeDefault {
	return &NodeUpgradeDefault{
		_statusCode: code,
	}
}

/*
	NodeUpgradeDefault describes a response with status code -1, with default header values.

Error trying to upgrade node
*/
type NodeUpgradeDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the node upgrade default response
func (o *NodeUpgradeDefault) Code() int {
	return o._statusCode
}

func (o *NodeUpgradeDefault) Error() string {
	return fmt.Sprintf("[POST /nodes/upgrade/{node}][%d] NodeUpgrade default  %+v", o._statusCode, o.Payload)
}
func (o *NodeUpgradeDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeUpgradeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
