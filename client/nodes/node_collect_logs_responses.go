// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// NodeCollectLogsReader is a Reader for the NodeCollectLogs structure.
type NodeCollectLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeCollectLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeCollectLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNodeCollectLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNodeCollectLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewNodeCollectLogsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodeCollectLogsOK creates a NodeCollectLogsOK with default headers values
func NewNodeCollectLogsOK() *NodeCollectLogsOK {
	return &NodeCollectLogsOK{}
}

/*
	NodeCollectLogsOK describes a response with status code 200, with default header values.

Node collect logs job  was created successfully
*/
type NodeCollectLogsOK struct {
	Payload *models.RegularResponse
}

func (o *NodeCollectLogsOK) Error() string {
	return fmt.Sprintf("[POST /nodes/logs/{node}/{tenant}][%d] nodeCollectLogsOK  %+v", 200, o.Payload)
}
func (o *NodeCollectLogsOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *NodeCollectLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeCollectLogsBadRequest creates a NodeCollectLogsBadRequest with default headers values
func NewNodeCollectLogsBadRequest() *NodeCollectLogsBadRequest {
	return &NodeCollectLogsBadRequest{}
}

/*
	NodeCollectLogsBadRequest describes a response with status code 400, with default header values.

Invalid node name supplied
*/
type NodeCollectLogsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *NodeCollectLogsBadRequest) Error() string {
	return fmt.Sprintf("[POST /nodes/logs/{node}/{tenant}][%d] nodeCollectLogsBadRequest  %+v", 400, o.Payload)
}
func (o *NodeCollectLogsBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeCollectLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeCollectLogsNotFound creates a NodeCollectLogsNotFound with default headers values
func NewNodeCollectLogsNotFound() *NodeCollectLogsNotFound {
	return &NodeCollectLogsNotFound{}
}

/*
	NodeCollectLogsNotFound describes a response with status code 404, with default header values.

Node not found
*/
type NodeCollectLogsNotFound struct {
	Payload *models.ErrorResponse
}

func (o *NodeCollectLogsNotFound) Error() string {
	return fmt.Sprintf("[POST /nodes/logs/{node}/{tenant}][%d] nodeCollectLogsNotFound  %+v", 404, o.Payload)
}
func (o *NodeCollectLogsNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeCollectLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeCollectLogsDefault creates a NodeCollectLogsDefault with default headers values
func NewNodeCollectLogsDefault(code int) *NodeCollectLogsDefault {
	return &NodeCollectLogsDefault{
		_statusCode: code,
	}
}

/*
	NodeCollectLogsDefault describes a response with status code -1, with default header values.

Error trying to create node collect logs job
*/
type NodeCollectLogsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the node collect logs default response
func (o *NodeCollectLogsDefault) Code() int {
	return o._statusCode
}

func (o *NodeCollectLogsDefault) Error() string {
	return fmt.Sprintf("[POST /nodes/logs/{node}/{tenant}][%d] NodeCollectLogs default  %+v", o._statusCode, o.Payload)
}
func (o *NodeCollectLogsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeCollectLogsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
