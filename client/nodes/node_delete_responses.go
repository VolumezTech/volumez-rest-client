// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// NodeDeleteReader is a Reader for the NodeDelete structure.
type NodeDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodeDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodeDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNodeDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodeDeleteOK creates a NodeDeleteOK with default headers values
func NewNodeDeleteOK() *NodeDeleteOK {
	return &NodeDeleteOK{}
}

/*
NodeDeleteOK describes a response with status code 200, with default header values.

A node delete job was created successfully
*/
type NodeDeleteOK struct {
	Payload *models.RegularResponse
}

// IsSuccess returns true when this node delete o k response has a 2xx status code
func (o *NodeDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this node delete o k response has a 3xx status code
func (o *NodeDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this node delete o k response has a 4xx status code
func (o *NodeDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this node delete o k response has a 5xx status code
func (o *NodeDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this node delete o k response a status code equal to that given
func (o *NodeDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the node delete o k response
func (o *NodeDeleteOK) Code() int {
	return 200
}

func (o *NodeDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{node}][%d] nodeDeleteOK %s", 200, payload)
}

func (o *NodeDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{node}][%d] nodeDeleteOK %s", 200, payload)
}

func (o *NodeDeleteOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *NodeDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodeDeleteDefault creates a NodeDeleteDefault with default headers values
func NewNodeDeleteDefault(code int) *NodeDeleteDefault {
	return &NodeDeleteDefault{
		_statusCode: code,
	}
}

/*
NodeDeleteDefault describes a response with status code -1, with default header values.

Error deleting a node
*/
type NodeDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this node delete default response has a 2xx status code
func (o *NodeDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this node delete default response has a 3xx status code
func (o *NodeDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this node delete default response has a 4xx status code
func (o *NodeDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this node delete default response has a 5xx status code
func (o *NodeDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this node delete default response a status code equal to that given
func (o *NodeDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the node delete default response
func (o *NodeDeleteDefault) Code() int {
	return o._statusCode
}

func (o *NodeDeleteDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{node}][%d] NodeDelete default %s", o._statusCode, payload)
}

func (o *NodeDeleteDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /nodes/{node}][%d] NodeDelete default %s", o._statusCode, payload)
}

func (o *NodeDeleteDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *NodeDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
