// Code generated by go-swagger; DO NOT EDIT.

package snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSnapshotRollbackParams creates a new SnapshotRollbackParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSnapshotRollbackParams() *SnapshotRollbackParams {
	return &SnapshotRollbackParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSnapshotRollbackParamsWithTimeout creates a new SnapshotRollbackParams object
// with the ability to set a timeout on a request.
func NewSnapshotRollbackParamsWithTimeout(timeout time.Duration) *SnapshotRollbackParams {
	return &SnapshotRollbackParams{
		timeout: timeout,
	}
}

// NewSnapshotRollbackParamsWithContext creates a new SnapshotRollbackParams object
// with the ability to set a context for a request.
func NewSnapshotRollbackParamsWithContext(ctx context.Context) *SnapshotRollbackParams {
	return &SnapshotRollbackParams{
		Context: ctx,
	}
}

// NewSnapshotRollbackParamsWithHTTPClient creates a new SnapshotRollbackParams object
// with the ability to set a custom HTTPClient for a request.
func NewSnapshotRollbackParamsWithHTTPClient(client *http.Client) *SnapshotRollbackParams {
	return &SnapshotRollbackParams{
		HTTPClient: client,
	}
}

/*
SnapshotRollbackParams contains all the parameters to send to the API endpoint

	for the snapshot rollback operation.

	Typically these are written to a http.Request.
*/
type SnapshotRollbackParams struct {

	// Authorization.
	Authorization *string

	// Snapshot.
	Snapshot string

	// Volume.
	Volume string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the snapshot rollback params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SnapshotRollbackParams) WithDefaults() *SnapshotRollbackParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the snapshot rollback params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SnapshotRollbackParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the snapshot rollback params
func (o *SnapshotRollbackParams) WithTimeout(timeout time.Duration) *SnapshotRollbackParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the snapshot rollback params
func (o *SnapshotRollbackParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the snapshot rollback params
func (o *SnapshotRollbackParams) WithContext(ctx context.Context) *SnapshotRollbackParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the snapshot rollback params
func (o *SnapshotRollbackParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the snapshot rollback params
func (o *SnapshotRollbackParams) WithHTTPClient(client *http.Client) *SnapshotRollbackParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the snapshot rollback params
func (o *SnapshotRollbackParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the snapshot rollback params
func (o *SnapshotRollbackParams) WithAuthorization(authorization *string) *SnapshotRollbackParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the snapshot rollback params
func (o *SnapshotRollbackParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithSnapshot adds the snapshot to the snapshot rollback params
func (o *SnapshotRollbackParams) WithSnapshot(snapshot string) *SnapshotRollbackParams {
	o.SetSnapshot(snapshot)
	return o
}

// SetSnapshot adds the snapshot to the snapshot rollback params
func (o *SnapshotRollbackParams) SetSnapshot(snapshot string) {
	o.Snapshot = snapshot
}

// WithVolume adds the volume to the snapshot rollback params
func (o *SnapshotRollbackParams) WithVolume(volume string) *SnapshotRollbackParams {
	o.SetVolume(volume)
	return o
}

// SetVolume adds the volume to the snapshot rollback params
func (o *SnapshotRollbackParams) SetVolume(volume string) {
	o.Volume = volume
}

// WriteToRequest writes these params to a swagger request
func (o *SnapshotRollbackParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param authorization
		if err := r.SetHeaderParam("authorization", *o.Authorization); err != nil {
			return err
		}
	}

	// path param snapshot
	if err := r.SetPathParam("snapshot", o.Snapshot); err != nil {
		return err
	}

	// path param volume
	if err := r.SetPathParam("volume", o.Volume); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
