// Code generated by go-swagger; DO NOT EDIT.

package request_user_password

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"bitbucket.org/volumez/volumez/test/restapi/models"
)

// RequestChangePasswordReader is a Reader for the RequestChangePassword structure.
type RequestChangePasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestChangePasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestChangePasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRequestChangePasswordDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRequestChangePasswordOK creates a RequestChangePasswordOK with default headers values
func NewRequestChangePasswordOK() *RequestChangePasswordOK {
	return &RequestChangePasswordOK{}
}

/* RequestChangePasswordOK describes a response with status code 200, with default header values.

Request for password change done successfully
*/
type RequestChangePasswordOK struct {
	Payload *models.RegularResponse
}

func (o *RequestChangePasswordOK) Error() string {
	return fmt.Sprintf("[POST /tenant/user/requestchangepassword][%d] requestChangePasswordOK  %+v", 200, o.Payload)
}
func (o *RequestChangePasswordOK) GetPayload() *models.RegularResponse {
	return o.Payload
}

func (o *RequestChangePasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegularResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestChangePasswordDefault creates a RequestChangePasswordDefault with default headers values
func NewRequestChangePasswordDefault(code int) *RequestChangePasswordDefault {
	return &RequestChangePasswordDefault{
		_statusCode: code,
	}
}

/* RequestChangePasswordDefault describes a response with status code -1, with default header values.

Error request changing password
*/
type RequestChangePasswordDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the request change password default response
func (o *RequestChangePasswordDefault) Code() int {
	return o._statusCode
}

func (o *RequestChangePasswordDefault) Error() string {
	return fmt.Sprintf("[POST /tenant/user/requestchangepassword][%d] RequestChangePassword default  %+v", o._statusCode, o.Payload)
}
func (o *RequestChangePasswordDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *RequestChangePasswordDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
