// Code generated by go-swagger; DO NOT EDIT.

package version

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// VersionGetReader is a Reader for the VersionGet structure.
type VersionGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VersionGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVersionGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewVersionGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVersionGetOK creates a VersionGetOK with default headers values
func NewVersionGetOK() *VersionGetOK {
	return &VersionGetOK{}
}

/*
VersionGetOK describes a response with status code 200, with default header values.

Version of sio
*/
type VersionGetOK struct {
	Payload *models.VersionResponse
}

// IsSuccess returns true when this version get o k response has a 2xx status code
func (o *VersionGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this version get o k response has a 3xx status code
func (o *VersionGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this version get o k response has a 4xx status code
func (o *VersionGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this version get o k response has a 5xx status code
func (o *VersionGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this version get o k response a status code equal to that given
func (o *VersionGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the version get o k response
func (o *VersionGetOK) Code() int {
	return 200
}

func (o *VersionGetOK) Error() string {
	return fmt.Sprintf("[GET /version][%d] versionGetOK  %+v", 200, o.Payload)
}

func (o *VersionGetOK) String() string {
	return fmt.Sprintf("[GET /version][%d] versionGetOK  %+v", 200, o.Payload)
}

func (o *VersionGetOK) GetPayload() *models.VersionResponse {
	return o.Payload
}

func (o *VersionGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VersionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVersionGetDefault creates a VersionGetDefault with default headers values
func NewVersionGetDefault(code int) *VersionGetDefault {
	return &VersionGetDefault{
		_statusCode: code,
	}
}

/*
VersionGetDefault describes a response with status code -1, with default header values.

Error getting version of sio
*/
type VersionGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this version get default response has a 2xx status code
func (o *VersionGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this version get default response has a 3xx status code
func (o *VersionGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this version get default response has a 4xx status code
func (o *VersionGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this version get default response has a 5xx status code
func (o *VersionGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this version get default response a status code equal to that given
func (o *VersionGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the version get default response
func (o *VersionGetDefault) Code() int {
	return o._statusCode
}

func (o *VersionGetDefault) Error() string {
	return fmt.Sprintf("[GET /version][%d] versionGet default  %+v", o._statusCode, o.Payload)
}

func (o *VersionGetDefault) String() string {
	return fmt.Sprintf("[GET /version][%d] versionGet default  %+v", o._statusCode, o.Payload)
}

func (o *VersionGetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *VersionGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
