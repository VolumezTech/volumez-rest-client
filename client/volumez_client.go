// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/client/attachments"
	"github.com/VolumezTech/volumez-rest-client/client/connectivities"
	"github.com/VolumezTech/volumez-rest-client/client/health"
	"github.com/VolumezTech/volumez-rest-client/client/jobs"
	"github.com/VolumezTech/volumez-rest-client/client/media"
	"github.com/VolumezTech/volumez-rest-client/client/networks"
	"github.com/VolumezTech/volumez-rest-client/client/nodes"
	"github.com/VolumezTech/volumez-rest-client/client/policies"
	"github.com/VolumezTech/volumez-rest-client/client/request_user_password"
	"github.com/VolumezTech/volumez-rest-client/client/signin"
	"github.com/VolumezTech/volumez-rest-client/client/snapshots"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_api_access_refresh_token"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_host"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_host_credentials"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_hosts"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_id_from_tenant_token"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_refresh_token"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_token"
	"github.com/VolumezTech/volumez-rest-client/client/tenant_user"
	"github.com/VolumezTech/volumez-rest-client/client/user_confirm"
	"github.com/VolumezTech/volumez-rest-client/client/user_password"
	"github.com/VolumezTech/volumez-rest-client/client/user_password_logged_in"
	"github.com/VolumezTech/volumez-rest-client/client/users"
	"github.com/VolumezTech/volumez-rest-client/client/version"
	"github.com/VolumezTech/volumez-rest-client/client/volumes"
)

// Default volumez HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.volumez.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/v1"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new volumez HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Volumez {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new volumez HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Volumez {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new volumez client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Volumez {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Volumez)
	cli.Transport = transport
	cli.Attachments = attachments.New(transport, formats)
	cli.Connectivities = connectivities.New(transport, formats)
	cli.Health = health.New(transport, formats)
	cli.Jobs = jobs.New(transport, formats)
	cli.Media = media.New(transport, formats)
	cli.Networks = networks.New(transport, formats)
	cli.Nodes = nodes.New(transport, formats)
	cli.Policies = policies.New(transport, formats)
	cli.RequestUserPassword = request_user_password.New(transport, formats)
	cli.Signin = signin.New(transport, formats)
	cli.Snapshots = snapshots.New(transport, formats)
	cli.TenantAPIAccessRefreshToken = tenant_api_access_refresh_token.New(transport, formats)
	cli.TenantHost = tenant_host.New(transport, formats)
	cli.TenantHostCredentials = tenant_host_credentials.New(transport, formats)
	cli.TenantHosts = tenant_hosts.New(transport, formats)
	cli.TenantIDFromTenantToken = tenant_id_from_tenant_token.New(transport, formats)
	cli.TenantRefreshToken = tenant_refresh_token.New(transport, formats)
	cli.TenantToken = tenant_token.New(transport, formats)
	cli.TenantUser = tenant_user.New(transport, formats)
	cli.UserConfirm = user_confirm.New(transport, formats)
	cli.UserPassword = user_password.New(transport, formats)
	cli.UserPasswordLoggedIn = user_password_logged_in.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Version = version.New(transport, formats)
	cli.Volumes = volumes.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Volumez is a client for volumez
type Volumez struct {
	Attachments attachments.ClientService

	Connectivities connectivities.ClientService

	Health health.ClientService

	Jobs jobs.ClientService

	Media media.ClientService

	Networks networks.ClientService

	Nodes nodes.ClientService

	Policies policies.ClientService

	RequestUserPassword request_user_password.ClientService

	Signin signin.ClientService

	Snapshots snapshots.ClientService

	TenantAPIAccessRefreshToken tenant_api_access_refresh_token.ClientService

	TenantHost tenant_host.ClientService

	TenantHostCredentials tenant_host_credentials.ClientService

	TenantHosts tenant_hosts.ClientService

	TenantIDFromTenantToken tenant_id_from_tenant_token.ClientService

	TenantRefreshToken tenant_refresh_token.ClientService

	TenantToken tenant_token.ClientService

	TenantUser tenant_user.ClientService

	UserConfirm user_confirm.ClientService

	UserPassword user_password.ClientService

	UserPasswordLoggedIn user_password_logged_in.ClientService

	Users users.ClientService

	Version version.ClientService

	Volumes volumes.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Volumez) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Attachments.SetTransport(transport)
	c.Connectivities.SetTransport(transport)
	c.Health.SetTransport(transport)
	c.Jobs.SetTransport(transport)
	c.Media.SetTransport(transport)
	c.Networks.SetTransport(transport)
	c.Nodes.SetTransport(transport)
	c.Policies.SetTransport(transport)
	c.RequestUserPassword.SetTransport(transport)
	c.Signin.SetTransport(transport)
	c.Snapshots.SetTransport(transport)
	c.TenantAPIAccessRefreshToken.SetTransport(transport)
	c.TenantHost.SetTransport(transport)
	c.TenantHostCredentials.SetTransport(transport)
	c.TenantHosts.SetTransport(transport)
	c.TenantIDFromTenantToken.SetTransport(transport)
	c.TenantRefreshToken.SetTransport(transport)
	c.TenantToken.SetTransport(transport)
	c.TenantUser.SetTransport(transport)
	c.UserConfirm.SetTransport(transport)
	c.UserPassword.SetTransport(transport)
	c.UserPasswordLoggedIn.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Version.SetTransport(transport)
	c.Volumes.SetTransport(transport)
}
