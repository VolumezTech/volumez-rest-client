// Code generated by go-swagger; DO NOT EDIT.

package tenant_host_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/VolumezTech/volumez-rest-client/restapi/models"
)

// TenanthostAccessCredentialsReader is a Reader for the TenanthostAccessCredentials structure.
type TenanthostAccessCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TenanthostAccessCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTenanthostAccessCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewTenanthostAccessCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /tenant/tenanthost/credentials] TenanthostAccessCredentials", response, response.Code())
	}
}

// NewTenanthostAccessCredentialsOK creates a TenanthostAccessCredentialsOK with default headers values
func NewTenanthostAccessCredentialsOK() *TenanthostAccessCredentialsOK {
	return &TenanthostAccessCredentialsOK{}
}

/*
TenanthostAccessCredentialsOK describes a response with status code 200, with default header values.

200 response
*/
type TenanthostAccessCredentialsOK struct {
	AccessControlAllowOrigin string

	Payload *models.RefreshTokenResponse
}

// IsSuccess returns true when this tenanthost access credentials o k response has a 2xx status code
func (o *TenanthostAccessCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tenanthost access credentials o k response has a 3xx status code
func (o *TenanthostAccessCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tenanthost access credentials o k response has a 4xx status code
func (o *TenanthostAccessCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tenanthost access credentials o k response has a 5xx status code
func (o *TenanthostAccessCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tenanthost access credentials o k response a status code equal to that given
func (o *TenanthostAccessCredentialsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tenanthost access credentials o k response
func (o *TenanthostAccessCredentialsOK) Code() int {
	return 200
}

func (o *TenanthostAccessCredentialsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/tenanthost/credentials][%d] tenanthostAccessCredentialsOK %s", 200, payload)
}

func (o *TenanthostAccessCredentialsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/tenanthost/credentials][%d] tenanthostAccessCredentialsOK %s", 200, payload)
}

func (o *TenanthostAccessCredentialsOK) GetPayload() *models.RefreshTokenResponse {
	return o.Payload
}

func (o *TenanthostAccessCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Access-Control-Allow-Origin
	hdrAccessControlAllowOrigin := response.GetHeader("Access-Control-Allow-Origin")

	if hdrAccessControlAllowOrigin != "" {
		o.AccessControlAllowOrigin = hdrAccessControlAllowOrigin
	}

	o.Payload = new(models.RefreshTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTenanthostAccessCredentialsInternalServerError creates a TenanthostAccessCredentialsInternalServerError with default headers values
func NewTenanthostAccessCredentialsInternalServerError() *TenanthostAccessCredentialsInternalServerError {
	return &TenanthostAccessCredentialsInternalServerError{}
}

/*
TenanthostAccessCredentialsInternalServerError describes a response with status code 500, with default header values.

Error getting ID Token from Tenant's Host Token (Refresh Token)
*/
type TenanthostAccessCredentialsInternalServerError struct {
	AccessControlAllowOrigin string

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this tenanthost access credentials internal server error response has a 2xx status code
func (o *TenanthostAccessCredentialsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tenanthost access credentials internal server error response has a 3xx status code
func (o *TenanthostAccessCredentialsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tenanthost access credentials internal server error response has a 4xx status code
func (o *TenanthostAccessCredentialsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this tenanthost access credentials internal server error response has a 5xx status code
func (o *TenanthostAccessCredentialsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this tenanthost access credentials internal server error response a status code equal to that given
func (o *TenanthostAccessCredentialsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the tenanthost access credentials internal server error response
func (o *TenanthostAccessCredentialsInternalServerError) Code() int {
	return 500
}

func (o *TenanthostAccessCredentialsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/tenanthost/credentials][%d] tenanthostAccessCredentialsInternalServerError %s", 500, payload)
}

func (o *TenanthostAccessCredentialsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/tenanthost/credentials][%d] tenanthostAccessCredentialsInternalServerError %s", 500, payload)
}

func (o *TenanthostAccessCredentialsInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TenanthostAccessCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Access-Control-Allow-Origin
	hdrAccessControlAllowOrigin := response.GetHeader("Access-Control-Allow-Origin")

	if hdrAccessControlAllowOrigin != "" {
		o.AccessControlAllowOrigin = hdrAccessControlAllowOrigin
	}

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
