/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the BatchVolumesPlanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchVolumesPlanRequest{}

// BatchVolumesPlanRequest struct for BatchVolumesPlanRequest
type BatchVolumesPlanRequest struct {
	Volumes []BatchVolumesPlanRequestVolumesInner `json:"Volumes,omitempty"`
	// capacity groups to create the volume from (optional)
	CapacityGroup *string `json:"CapacityGroup,omitempty"`
	// zone parameter for all volumes that dont have zone parameter
	DefaultZone *string `json:"DefaultZone,omitempty"`
	// policy parameter for all volumes that dont have policy parameter defined in their input
	DefaultPolicy *string `json:"DefaultPolicy,omitempty"`
}

// NewBatchVolumesPlanRequest instantiates a new BatchVolumesPlanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchVolumesPlanRequest() *BatchVolumesPlanRequest {
	this := BatchVolumesPlanRequest{}
	return &this
}

// NewBatchVolumesPlanRequestWithDefaults instantiates a new BatchVolumesPlanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchVolumesPlanRequestWithDefaults() *BatchVolumesPlanRequest {
	this := BatchVolumesPlanRequest{}
	return &this
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *BatchVolumesPlanRequest) GetVolumes() []BatchVolumesPlanRequestVolumesInner {
	if o == nil || IsNil(o.Volumes) {
		var ret []BatchVolumesPlanRequestVolumesInner
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchVolumesPlanRequest) GetVolumesOk() ([]BatchVolumesPlanRequestVolumesInner, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *BatchVolumesPlanRequest) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []BatchVolumesPlanRequestVolumesInner and assigns it to the Volumes field.
func (o *BatchVolumesPlanRequest) SetVolumes(v []BatchVolumesPlanRequestVolumesInner) {
	o.Volumes = v
}

// GetCapacityGroup returns the CapacityGroup field value if set, zero value otherwise.
func (o *BatchVolumesPlanRequest) GetCapacityGroup() string {
	if o == nil || IsNil(o.CapacityGroup) {
		var ret string
		return ret
	}
	return *o.CapacityGroup
}

// GetCapacityGroupOk returns a tuple with the CapacityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchVolumesPlanRequest) GetCapacityGroupOk() (*string, bool) {
	if o == nil || IsNil(o.CapacityGroup) {
		return nil, false
	}
	return o.CapacityGroup, true
}

// HasCapacityGroup returns a boolean if a field has been set.
func (o *BatchVolumesPlanRequest) HasCapacityGroup() bool {
	if o != nil && !IsNil(o.CapacityGroup) {
		return true
	}

	return false
}

// SetCapacityGroup gets a reference to the given string and assigns it to the CapacityGroup field.
func (o *BatchVolumesPlanRequest) SetCapacityGroup(v string) {
	o.CapacityGroup = &v
}

// GetDefaultZone returns the DefaultZone field value if set, zero value otherwise.
func (o *BatchVolumesPlanRequest) GetDefaultZone() string {
	if o == nil || IsNil(o.DefaultZone) {
		var ret string
		return ret
	}
	return *o.DefaultZone
}

// GetDefaultZoneOk returns a tuple with the DefaultZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchVolumesPlanRequest) GetDefaultZoneOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultZone) {
		return nil, false
	}
	return o.DefaultZone, true
}

// HasDefaultZone returns a boolean if a field has been set.
func (o *BatchVolumesPlanRequest) HasDefaultZone() bool {
	if o != nil && !IsNil(o.DefaultZone) {
		return true
	}

	return false
}

// SetDefaultZone gets a reference to the given string and assigns it to the DefaultZone field.
func (o *BatchVolumesPlanRequest) SetDefaultZone(v string) {
	o.DefaultZone = &v
}

// GetDefaultPolicy returns the DefaultPolicy field value if set, zero value otherwise.
func (o *BatchVolumesPlanRequest) GetDefaultPolicy() string {
	if o == nil || IsNil(o.DefaultPolicy) {
		var ret string
		return ret
	}
	return *o.DefaultPolicy
}

// GetDefaultPolicyOk returns a tuple with the DefaultPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchVolumesPlanRequest) GetDefaultPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPolicy) {
		return nil, false
	}
	return o.DefaultPolicy, true
}

// HasDefaultPolicy returns a boolean if a field has been set.
func (o *BatchVolumesPlanRequest) HasDefaultPolicy() bool {
	if o != nil && !IsNil(o.DefaultPolicy) {
		return true
	}

	return false
}

// SetDefaultPolicy gets a reference to the given string and assigns it to the DefaultPolicy field.
func (o *BatchVolumesPlanRequest) SetDefaultPolicy(v string) {
	o.DefaultPolicy = &v
}

func (o BatchVolumesPlanRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchVolumesPlanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Volumes) {
		toSerialize["Volumes"] = o.Volumes
	}
	if !IsNil(o.CapacityGroup) {
		toSerialize["CapacityGroup"] = o.CapacityGroup
	}
	if !IsNil(o.DefaultZone) {
		toSerialize["DefaultZone"] = o.DefaultZone
	}
	if !IsNil(o.DefaultPolicy) {
		toSerialize["DefaultPolicy"] = o.DefaultPolicy
	}
	return toSerialize, nil
}

type NullableBatchVolumesPlanRequest struct {
	value *BatchVolumesPlanRequest
	isSet bool
}

func (v NullableBatchVolumesPlanRequest) Get() *BatchVolumesPlanRequest {
	return v.value
}

func (v *NullableBatchVolumesPlanRequest) Set(val *BatchVolumesPlanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchVolumesPlanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchVolumesPlanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchVolumesPlanRequest(val *BatchVolumesPlanRequest) *NullableBatchVolumesPlanRequest {
	return &NullableBatchVolumesPlanRequest{value: val, isSet: true}
}

func (v NullableBatchVolumesPlanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchVolumesPlanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
