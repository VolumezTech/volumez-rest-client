/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the GetTenantSettingsResponseThrottle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantSettingsResponseThrottle{}

// GetTenantSettingsResponseThrottle struct for GetTenantSettingsResponseThrottle
type GetTenantSettingsResponseThrottle struct {
	SelectedScheme NullableString                                       `json:"selectedScheme,omitempty"`
	Application    NullableGetTenantSettingsResponseThrottleApplication `json:"application,omitempty"`
	Media          NullableGetTenantSettingsResponseThrottleMedia       `json:"media,omitempty"`
	Attachment     NullableGetTenantSettingsResponseThrottleAttachment  `json:"attachment,omitempty"`
}

// NewGetTenantSettingsResponseThrottle instantiates a new GetTenantSettingsResponseThrottle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantSettingsResponseThrottle() *GetTenantSettingsResponseThrottle {
	this := GetTenantSettingsResponseThrottle{}
	return &this
}

// NewGetTenantSettingsResponseThrottleWithDefaults instantiates a new GetTenantSettingsResponseThrottle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantSettingsResponseThrottleWithDefaults() *GetTenantSettingsResponseThrottle {
	this := GetTenantSettingsResponseThrottle{}
	return &this
}

// GetSelectedScheme returns the SelectedScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseThrottle) GetSelectedScheme() string {
	if o == nil || IsNil(o.SelectedScheme.Get()) {
		var ret string
		return ret
	}
	return *o.SelectedScheme.Get()
}

// GetSelectedSchemeOk returns a tuple with the SelectedScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseThrottle) GetSelectedSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectedScheme.Get(), o.SelectedScheme.IsSet()
}

// HasSelectedScheme returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseThrottle) HasSelectedScheme() bool {
	if o != nil && o.SelectedScheme.IsSet() {
		return true
	}

	return false
}

// SetSelectedScheme gets a reference to the given NullableString and assigns it to the SelectedScheme field.
func (o *GetTenantSettingsResponseThrottle) SetSelectedScheme(v string) {
	o.SelectedScheme.Set(&v)
}

// SetSelectedSchemeNil sets the value for SelectedScheme to be an explicit nil
func (o *GetTenantSettingsResponseThrottle) SetSelectedSchemeNil() {
	o.SelectedScheme.Set(nil)
}

// UnsetSelectedScheme ensures that no value is present for SelectedScheme, not even an explicit nil
func (o *GetTenantSettingsResponseThrottle) UnsetSelectedScheme() {
	o.SelectedScheme.Unset()
}

// GetApplication returns the Application field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseThrottle) GetApplication() GetTenantSettingsResponseThrottleApplication {
	if o == nil || IsNil(o.Application.Get()) {
		var ret GetTenantSettingsResponseThrottleApplication
		return ret
	}
	return *o.Application.Get()
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseThrottle) GetApplicationOk() (*GetTenantSettingsResponseThrottleApplication, bool) {
	if o == nil {
		return nil, false
	}
	return o.Application.Get(), o.Application.IsSet()
}

// HasApplication returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseThrottle) HasApplication() bool {
	if o != nil && o.Application.IsSet() {
		return true
	}

	return false
}

// SetApplication gets a reference to the given NullableGetTenantSettingsResponseThrottleApplication and assigns it to the Application field.
func (o *GetTenantSettingsResponseThrottle) SetApplication(v GetTenantSettingsResponseThrottleApplication) {
	o.Application.Set(&v)
}

// SetApplicationNil sets the value for Application to be an explicit nil
func (o *GetTenantSettingsResponseThrottle) SetApplicationNil() {
	o.Application.Set(nil)
}

// UnsetApplication ensures that no value is present for Application, not even an explicit nil
func (o *GetTenantSettingsResponseThrottle) UnsetApplication() {
	o.Application.Unset()
}

// GetMedia returns the Media field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseThrottle) GetMedia() GetTenantSettingsResponseThrottleMedia {
	if o == nil || IsNil(o.Media.Get()) {
		var ret GetTenantSettingsResponseThrottleMedia
		return ret
	}
	return *o.Media.Get()
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseThrottle) GetMediaOk() (*GetTenantSettingsResponseThrottleMedia, bool) {
	if o == nil {
		return nil, false
	}
	return o.Media.Get(), o.Media.IsSet()
}

// HasMedia returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseThrottle) HasMedia() bool {
	if o != nil && o.Media.IsSet() {
		return true
	}

	return false
}

// SetMedia gets a reference to the given NullableGetTenantSettingsResponseThrottleMedia and assigns it to the Media field.
func (o *GetTenantSettingsResponseThrottle) SetMedia(v GetTenantSettingsResponseThrottleMedia) {
	o.Media.Set(&v)
}

// SetMediaNil sets the value for Media to be an explicit nil
func (o *GetTenantSettingsResponseThrottle) SetMediaNil() {
	o.Media.Set(nil)
}

// UnsetMedia ensures that no value is present for Media, not even an explicit nil
func (o *GetTenantSettingsResponseThrottle) UnsetMedia() {
	o.Media.Unset()
}

// GetAttachment returns the Attachment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseThrottle) GetAttachment() GetTenantSettingsResponseThrottleAttachment {
	if o == nil || IsNil(o.Attachment.Get()) {
		var ret GetTenantSettingsResponseThrottleAttachment
		return ret
	}
	return *o.Attachment.Get()
}

// GetAttachmentOk returns a tuple with the Attachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseThrottle) GetAttachmentOk() (*GetTenantSettingsResponseThrottleAttachment, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachment.Get(), o.Attachment.IsSet()
}

// HasAttachment returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseThrottle) HasAttachment() bool {
	if o != nil && o.Attachment.IsSet() {
		return true
	}

	return false
}

// SetAttachment gets a reference to the given NullableGetTenantSettingsResponseThrottleAttachment and assigns it to the Attachment field.
func (o *GetTenantSettingsResponseThrottle) SetAttachment(v GetTenantSettingsResponseThrottleAttachment) {
	o.Attachment.Set(&v)
}

// SetAttachmentNil sets the value for Attachment to be an explicit nil
func (o *GetTenantSettingsResponseThrottle) SetAttachmentNil() {
	o.Attachment.Set(nil)
}

// UnsetAttachment ensures that no value is present for Attachment, not even an explicit nil
func (o *GetTenantSettingsResponseThrottle) UnsetAttachment() {
	o.Attachment.Unset()
}

func (o GetTenantSettingsResponseThrottle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantSettingsResponseThrottle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SelectedScheme.IsSet() {
		toSerialize["selectedScheme"] = o.SelectedScheme.Get()
	}
	if o.Application.IsSet() {
		toSerialize["application"] = o.Application.Get()
	}
	if o.Media.IsSet() {
		toSerialize["media"] = o.Media.Get()
	}
	if o.Attachment.IsSet() {
		toSerialize["attachment"] = o.Attachment.Get()
	}
	return toSerialize, nil
}

type NullableGetTenantSettingsResponseThrottle struct {
	value *GetTenantSettingsResponseThrottle
	isSet bool
}

func (v NullableGetTenantSettingsResponseThrottle) Get() *GetTenantSettingsResponseThrottle {
	return v.value
}

func (v *NullableGetTenantSettingsResponseThrottle) Set(val *GetTenantSettingsResponseThrottle) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantSettingsResponseThrottle) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantSettingsResponseThrottle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantSettingsResponseThrottle(val *GetTenantSettingsResponseThrottle) *NullableGetTenantSettingsResponseThrottle {
	return &NullableGetTenantSettingsResponseThrottle{value: val, isSet: true}
}

func (v NullableGetTenantSettingsResponseThrottle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantSettingsResponseThrottle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
