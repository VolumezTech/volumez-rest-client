/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTenantSettingsResponseSupport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantSettingsResponseSupport{}

// GetTenantSettingsResponseSupport struct for GetTenantSettingsResponseSupport
type GetTenantSettingsResponseSupport struct {
	AllowCollectLogs NullableBool `json:"allowCollectLogs,omitempty"`
}

// NewGetTenantSettingsResponseSupport instantiates a new GetTenantSettingsResponseSupport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantSettingsResponseSupport() *GetTenantSettingsResponseSupport {
	this := GetTenantSettingsResponseSupport{}
	return &this
}

// NewGetTenantSettingsResponseSupportWithDefaults instantiates a new GetTenantSettingsResponseSupport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantSettingsResponseSupportWithDefaults() *GetTenantSettingsResponseSupport {
	this := GetTenantSettingsResponseSupport{}
	return &this
}

// GetAllowCollectLogs returns the AllowCollectLogs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseSupport) GetAllowCollectLogs() bool {
	if o == nil || IsNil(o.AllowCollectLogs.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowCollectLogs.Get()
}

// GetAllowCollectLogsOk returns a tuple with the AllowCollectLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseSupport) GetAllowCollectLogsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowCollectLogs.Get(), o.AllowCollectLogs.IsSet()
}

// HasAllowCollectLogs returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseSupport) HasAllowCollectLogs() bool {
	if o != nil && o.AllowCollectLogs.IsSet() {
		return true
	}

	return false
}

// SetAllowCollectLogs gets a reference to the given NullableBool and assigns it to the AllowCollectLogs field.
func (o *GetTenantSettingsResponseSupport) SetAllowCollectLogs(v bool) {
	o.AllowCollectLogs.Set(&v)
}

// SetAllowCollectLogsNil sets the value for AllowCollectLogs to be an explicit nil
func (o *GetTenantSettingsResponseSupport) SetAllowCollectLogsNil() {
	o.AllowCollectLogs.Set(nil)
}

// UnsetAllowCollectLogs ensures that no value is present for AllowCollectLogs, not even an explicit nil
func (o *GetTenantSettingsResponseSupport) UnsetAllowCollectLogs() {
	o.AllowCollectLogs.Unset()
}

func (o GetTenantSettingsResponseSupport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantSettingsResponseSupport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowCollectLogs.IsSet() {
		toSerialize["allowCollectLogs"] = o.AllowCollectLogs.Get()
	}
	return toSerialize, nil
}

type NullableGetTenantSettingsResponseSupport struct {
	value *GetTenantSettingsResponseSupport
	isSet bool
}

func (v NullableGetTenantSettingsResponseSupport) Get() *GetTenantSettingsResponseSupport {
	return v.value
}

func (v *NullableGetTenantSettingsResponseSupport) Set(val *GetTenantSettingsResponseSupport) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantSettingsResponseSupport) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantSettingsResponseSupport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantSettingsResponseSupport(val *GetTenantSettingsResponseSupport) *NullableGetTenantSettingsResponseSupport {
	return &NullableGetTenantSettingsResponseSupport{value: val, isSet: true}
}

func (v NullableGetTenantSettingsResponseSupport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantSettingsResponseSupport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
