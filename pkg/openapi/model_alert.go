/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Alert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Alert{}

// Alert struct for Alert
type Alert struct {
	Alertid      *string `json:"alertid,omitempty"`
	Type         *string `json:"type,omitempty"`
	State        *string `json:"state,omitempty"`
	Severity     *string `json:"severity,omitempty"`
	Objecttype   *string `json:"objecttype,omitempty"`
	Objectid     *string `json:"objectid,omitempty"`
	Creationtime *string `json:"creationtime,omitempty"`
	Lastsendtime *string `json:"lastsendtime,omitempty"`
	Cleartime    *string `json:"cleartime,omitempty"`
	Details      *string `json:"details,omitempty"`
}

// NewAlert instantiates a new Alert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlert() *Alert {
	this := Alert{}
	return &this
}

// NewAlertWithDefaults instantiates a new Alert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWithDefaults() *Alert {
	this := Alert{}
	return &this
}

// GetAlertid returns the Alertid field value if set, zero value otherwise.
func (o *Alert) GetAlertid() string {
	if o == nil || IsNil(o.Alertid) {
		var ret string
		return ret
	}
	return *o.Alertid
}

// GetAlertidOk returns a tuple with the Alertid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetAlertidOk() (*string, bool) {
	if o == nil || IsNil(o.Alertid) {
		return nil, false
	}
	return o.Alertid, true
}

// HasAlertid returns a boolean if a field has been set.
func (o *Alert) HasAlertid() bool {
	if o != nil && !IsNil(o.Alertid) {
		return true
	}

	return false
}

// SetAlertid gets a reference to the given string and assigns it to the Alertid field.
func (o *Alert) SetAlertid(v string) {
	o.Alertid = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Alert) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Alert) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Alert) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Alert) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Alert) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Alert) SetState(v string) {
	o.State = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *Alert) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *Alert) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *Alert) SetSeverity(v string) {
	o.Severity = &v
}

// GetObjecttype returns the Objecttype field value if set, zero value otherwise.
func (o *Alert) GetObjecttype() string {
	if o == nil || IsNil(o.Objecttype) {
		var ret string
		return ret
	}
	return *o.Objecttype
}

// GetObjecttypeOk returns a tuple with the Objecttype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetObjecttypeOk() (*string, bool) {
	if o == nil || IsNil(o.Objecttype) {
		return nil, false
	}
	return o.Objecttype, true
}

// HasObjecttype returns a boolean if a field has been set.
func (o *Alert) HasObjecttype() bool {
	if o != nil && !IsNil(o.Objecttype) {
		return true
	}

	return false
}

// SetObjecttype gets a reference to the given string and assigns it to the Objecttype field.
func (o *Alert) SetObjecttype(v string) {
	o.Objecttype = &v
}

// GetObjectid returns the Objectid field value if set, zero value otherwise.
func (o *Alert) GetObjectid() string {
	if o == nil || IsNil(o.Objectid) {
		var ret string
		return ret
	}
	return *o.Objectid
}

// GetObjectidOk returns a tuple with the Objectid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetObjectidOk() (*string, bool) {
	if o == nil || IsNil(o.Objectid) {
		return nil, false
	}
	return o.Objectid, true
}

// HasObjectid returns a boolean if a field has been set.
func (o *Alert) HasObjectid() bool {
	if o != nil && !IsNil(o.Objectid) {
		return true
	}

	return false
}

// SetObjectid gets a reference to the given string and assigns it to the Objectid field.
func (o *Alert) SetObjectid(v string) {
	o.Objectid = &v
}

// GetCreationtime returns the Creationtime field value if set, zero value otherwise.
func (o *Alert) GetCreationtime() string {
	if o == nil || IsNil(o.Creationtime) {
		var ret string
		return ret
	}
	return *o.Creationtime
}

// GetCreationtimeOk returns a tuple with the Creationtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetCreationtimeOk() (*string, bool) {
	if o == nil || IsNil(o.Creationtime) {
		return nil, false
	}
	return o.Creationtime, true
}

// HasCreationtime returns a boolean if a field has been set.
func (o *Alert) HasCreationtime() bool {
	if o != nil && !IsNil(o.Creationtime) {
		return true
	}

	return false
}

// SetCreationtime gets a reference to the given string and assigns it to the Creationtime field.
func (o *Alert) SetCreationtime(v string) {
	o.Creationtime = &v
}

// GetLastsendtime returns the Lastsendtime field value if set, zero value otherwise.
func (o *Alert) GetLastsendtime() string {
	if o == nil || IsNil(o.Lastsendtime) {
		var ret string
		return ret
	}
	return *o.Lastsendtime
}

// GetLastsendtimeOk returns a tuple with the Lastsendtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetLastsendtimeOk() (*string, bool) {
	if o == nil || IsNil(o.Lastsendtime) {
		return nil, false
	}
	return o.Lastsendtime, true
}

// HasLastsendtime returns a boolean if a field has been set.
func (o *Alert) HasLastsendtime() bool {
	if o != nil && !IsNil(o.Lastsendtime) {
		return true
	}

	return false
}

// SetLastsendtime gets a reference to the given string and assigns it to the Lastsendtime field.
func (o *Alert) SetLastsendtime(v string) {
	o.Lastsendtime = &v
}

// GetCleartime returns the Cleartime field value if set, zero value otherwise.
func (o *Alert) GetCleartime() string {
	if o == nil || IsNil(o.Cleartime) {
		var ret string
		return ret
	}
	return *o.Cleartime
}

// GetCleartimeOk returns a tuple with the Cleartime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetCleartimeOk() (*string, bool) {
	if o == nil || IsNil(o.Cleartime) {
		return nil, false
	}
	return o.Cleartime, true
}

// HasCleartime returns a boolean if a field has been set.
func (o *Alert) HasCleartime() bool {
	if o != nil && !IsNil(o.Cleartime) {
		return true
	}

	return false
}

// SetCleartime gets a reference to the given string and assigns it to the Cleartime field.
func (o *Alert) SetCleartime(v string) {
	o.Cleartime = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Alert) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alert) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Alert) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *Alert) SetDetails(v string) {
	o.Details = &v
}

func (o Alert) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Alert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alertid) {
		toSerialize["alertid"] = o.Alertid
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Objecttype) {
		toSerialize["objecttype"] = o.Objecttype
	}
	if !IsNil(o.Objectid) {
		toSerialize["objectid"] = o.Objectid
	}
	if !IsNil(o.Creationtime) {
		toSerialize["creationtime"] = o.Creationtime
	}
	if !IsNil(o.Lastsendtime) {
		toSerialize["lastsendtime"] = o.Lastsendtime
	}
	if !IsNil(o.Cleartime) {
		toSerialize["cleartime"] = o.Cleartime
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableAlert struct {
	value *Alert
	isSet bool
}

func (v NullableAlert) Get() *Alert {
	return v.value
}

func (v *NullableAlert) Set(val *Alert) {
	v.value = val
	v.isSet = true
}

func (v NullableAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlert(val *Alert) *NullableAlert {
	return &NullableAlert{value: val, isSet: true}
}

func (v NullableAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
