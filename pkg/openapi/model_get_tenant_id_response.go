/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetTenantIDResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantIDResponse{}

// GetTenantIDResponse struct for GetTenantIDResponse
type GetTenantIDResponse struct {
	StatusCode int32   `json:"StatusCode"`
	Message    *string `json:"Message,omitempty"`
	TenantID   *string `json:"TenantID,omitempty"`
}

type _GetTenantIDResponse GetTenantIDResponse

// NewGetTenantIDResponse instantiates a new GetTenantIDResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantIDResponse(statusCode int32) *GetTenantIDResponse {
	this := GetTenantIDResponse{}
	this.StatusCode = statusCode
	return &this
}

// NewGetTenantIDResponseWithDefaults instantiates a new GetTenantIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantIDResponseWithDefaults() *GetTenantIDResponse {
	this := GetTenantIDResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *GetTenantIDResponse) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *GetTenantIDResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *GetTenantIDResponse) SetStatusCode(v int32) {
	o.StatusCode = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetTenantIDResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantIDResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetTenantIDResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetTenantIDResponse) SetMessage(v string) {
	o.Message = &v
}

// GetTenantID returns the TenantID field value if set, zero value otherwise.
func (o *GetTenantIDResponse) GetTenantID() string {
	if o == nil || IsNil(o.TenantID) {
		var ret string
		return ret
	}
	return *o.TenantID
}

// GetTenantIDOk returns a tuple with the TenantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantIDResponse) GetTenantIDOk() (*string, bool) {
	if o == nil || IsNil(o.TenantID) {
		return nil, false
	}
	return o.TenantID, true
}

// HasTenantID returns a boolean if a field has been set.
func (o *GetTenantIDResponse) HasTenantID() bool {
	if o != nil && !IsNil(o.TenantID) {
		return true
	}

	return false
}

// SetTenantID gets a reference to the given string and assigns it to the TenantID field.
func (o *GetTenantIDResponse) SetTenantID(v string) {
	o.TenantID = &v
}

func (o GetTenantIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantIDResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["StatusCode"] = o.StatusCode
	if !IsNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	if !IsNil(o.TenantID) {
		toSerialize["TenantID"] = o.TenantID
	}
	return toSerialize, nil
}

func (o *GetTenantIDResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"StatusCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTenantIDResponse := _GetTenantIDResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTenantIDResponse)

	if err != nil {
		return err
	}

	*o = GetTenantIDResponse(varGetTenantIDResponse)

	return err
}

type NullableGetTenantIDResponse struct {
	value *GetTenantIDResponse
	isSet bool
}

func (v NullableGetTenantIDResponse) Get() *GetTenantIDResponse {
	return v.value
}

func (v *NullableGetTenantIDResponse) Set(val *GetTenantIDResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantIDResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantIDResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantIDResponse(val *GetTenantIDResponse) *NullableGetTenantIDResponse {
	return &NullableGetTenantIDResponse{value: val, isSet: true}
}

func (v NullableGetTenantIDResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantIDResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
