/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ResetTenantSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResetTenantSettingsRequest{}

// ResetTenantSettingsRequest struct for ResetTenantSettingsRequest
type ResetTenantSettingsRequest struct {
	SettingsToReset ModifyTenantSettingsRequestSettingsToModify `json:"settingsToReset"`
}

type _ResetTenantSettingsRequest ResetTenantSettingsRequest

// NewResetTenantSettingsRequest instantiates a new ResetTenantSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetTenantSettingsRequest(settingsToReset ModifyTenantSettingsRequestSettingsToModify) *ResetTenantSettingsRequest {
	this := ResetTenantSettingsRequest{}
	this.SettingsToReset = settingsToReset
	return &this
}

// NewResetTenantSettingsRequestWithDefaults instantiates a new ResetTenantSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetTenantSettingsRequestWithDefaults() *ResetTenantSettingsRequest {
	this := ResetTenantSettingsRequest{}
	return &this
}

// GetSettingsToReset returns the SettingsToReset field value
func (o *ResetTenantSettingsRequest) GetSettingsToReset() ModifyTenantSettingsRequestSettingsToModify {
	if o == nil {
		var ret ModifyTenantSettingsRequestSettingsToModify
		return ret
	}

	return o.SettingsToReset
}

// GetSettingsToResetOk returns a tuple with the SettingsToReset field value
// and a boolean to check if the value has been set.
func (o *ResetTenantSettingsRequest) GetSettingsToResetOk() (*ModifyTenantSettingsRequestSettingsToModify, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SettingsToReset, true
}

// SetSettingsToReset sets field value
func (o *ResetTenantSettingsRequest) SetSettingsToReset(v ModifyTenantSettingsRequestSettingsToModify) {
	o.SettingsToReset = v
}

func (o ResetTenantSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResetTenantSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["settingsToReset"] = o.SettingsToReset
	return toSerialize, nil
}

func (o *ResetTenantSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"settingsToReset",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResetTenantSettingsRequest := _ResetTenantSettingsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResetTenantSettingsRequest)

	if err != nil {
		return err
	}

	*o = ResetTenantSettingsRequest(varResetTenantSettingsRequest)

	return err
}

type NullableResetTenantSettingsRequest struct {
	value *ResetTenantSettingsRequest
	isSet bool
}

func (v NullableResetTenantSettingsRequest) Get() *ResetTenantSettingsRequest {
	return v.value
}

func (v *NullableResetTenantSettingsRequest) Set(val *ResetTenantSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResetTenantSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResetTenantSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetTenantSettingsRequest(val *ResetTenantSettingsRequest) *NullableResetTenantSettingsRequest {
	return &NullableResetTenantSettingsRequest{value: val, isSet: true}
}

func (v NullableResetTenantSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetTenantSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
