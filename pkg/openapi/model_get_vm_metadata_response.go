/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetVMMetadataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVMMetadataResponse{}

// GetVMMetadataResponse struct for GetVMMetadataResponse
type GetVMMetadataResponse struct {
	Vpc *AvailableVPCItem `json:"vpc,omitempty"`
}

// NewGetVMMetadataResponse instantiates a new GetVMMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVMMetadataResponse() *GetVMMetadataResponse {
	this := GetVMMetadataResponse{}
	return &this
}

// NewGetVMMetadataResponseWithDefaults instantiates a new GetVMMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVMMetadataResponseWithDefaults() *GetVMMetadataResponse {
	this := GetVMMetadataResponse{}
	return &this
}

// GetVpc returns the Vpc field value if set, zero value otherwise.
func (o *GetVMMetadataResponse) GetVpc() AvailableVPCItem {
	if o == nil || IsNil(o.Vpc) {
		var ret AvailableVPCItem
		return ret
	}
	return *o.Vpc
}

// GetVpcOk returns a tuple with the Vpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVMMetadataResponse) GetVpcOk() (*AvailableVPCItem, bool) {
	if o == nil || IsNil(o.Vpc) {
		return nil, false
	}
	return o.Vpc, true
}

// HasVpc returns a boolean if a field has been set.
func (o *GetVMMetadataResponse) HasVpc() bool {
	if o != nil && !IsNil(o.Vpc) {
		return true
	}

	return false
}

// SetVpc gets a reference to the given AvailableVPCItem and assigns it to the Vpc field.
func (o *GetVMMetadataResponse) SetVpc(v AvailableVPCItem) {
	o.Vpc = &v
}

func (o GetVMMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVMMetadataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vpc) {
		toSerialize["vpc"] = o.Vpc
	}
	return toSerialize, nil
}

type NullableGetVMMetadataResponse struct {
	value *GetVMMetadataResponse
	isSet bool
}

func (v NullableGetVMMetadataResponse) Get() *GetVMMetadataResponse {
	return v.value
}

func (v *NullableGetVMMetadataResponse) Set(val *GetVMMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVMMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVMMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVMMetadataResponse(val *GetVMMetadataResponse) *NullableGetVMMetadataResponse {
	return &NullableGetVMMetadataResponse{value: val, isSet: true}
}

func (v NullableGetVMMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVMMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
