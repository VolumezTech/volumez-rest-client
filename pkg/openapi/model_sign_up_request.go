/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SignUpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignUpRequest{}

// SignUpRequest struct for SignUpRequest
type SignUpRequest struct {
	Email         string  `json:"email"`
	Password      string  `json:"password"`
	Name          string  `json:"name"`
	CloudProvider *string `json:"cloudProvider,omitempty"`
	MarketToken   *string `json:"marketToken,omitempty"`
}

type _SignUpRequest SignUpRequest

// NewSignUpRequest instantiates a new SignUpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignUpRequest(email string, password string, name string) *SignUpRequest {
	this := SignUpRequest{}
	this.Email = email
	this.Password = password
	this.Name = name
	return &this
}

// NewSignUpRequestWithDefaults instantiates a new SignUpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignUpRequestWithDefaults() *SignUpRequest {
	this := SignUpRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *SignUpRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *SignUpRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *SignUpRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *SignUpRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SignUpRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SignUpRequest) SetPassword(v string) {
	o.Password = v
}

// GetName returns the Name field value
func (o *SignUpRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SignUpRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SignUpRequest) SetName(v string) {
	o.Name = v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *SignUpRequest) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignUpRequest) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *SignUpRequest) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *SignUpRequest) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetMarketToken returns the MarketToken field value if set, zero value otherwise.
func (o *SignUpRequest) GetMarketToken() string {
	if o == nil || IsNil(o.MarketToken) {
		var ret string
		return ret
	}
	return *o.MarketToken
}

// GetMarketTokenOk returns a tuple with the MarketToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignUpRequest) GetMarketTokenOk() (*string, bool) {
	if o == nil || IsNil(o.MarketToken) {
		return nil, false
	}
	return o.MarketToken, true
}

// HasMarketToken returns a boolean if a field has been set.
func (o *SignUpRequest) HasMarketToken() bool {
	if o != nil && !IsNil(o.MarketToken) {
		return true
	}

	return false
}

// SetMarketToken gets a reference to the given string and assigns it to the MarketToken field.
func (o *SignUpRequest) SetMarketToken(v string) {
	o.MarketToken = &v
}

func (o SignUpRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignUpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	toSerialize["name"] = o.Name
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.MarketToken) {
		toSerialize["marketToken"] = o.MarketToken
	}
	return toSerialize, nil
}

func (o *SignUpRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"password",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignUpRequest := _SignUpRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSignUpRequest)

	if err != nil {
		return err
	}

	*o = SignUpRequest(varSignUpRequest)

	return err
}

type NullableSignUpRequest struct {
	value *SignUpRequest
	isSet bool
}

func (v NullableSignUpRequest) Get() *SignUpRequest {
	return v.value
}

func (v *NullableSignUpRequest) Set(val *SignUpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignUpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignUpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignUpRequest(val *SignUpRequest) *NullableSignUpRequest {
	return &NullableSignUpRequest{value: val, isSet: true}
}

func (v NullableSignUpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignUpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
