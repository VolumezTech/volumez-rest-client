/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTenantSettingsResponseThrottleApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantSettingsResponseThrottleApplication{}

// GetTenantSettingsResponseThrottleApplication struct for GetTenantSettingsResponseThrottleApplication
type GetTenantSettingsResponseThrottleApplication struct {
	PercentForSnapshots NullableInt32 `json:"percentForSnapshots,omitempty"`
}

// NewGetTenantSettingsResponseThrottleApplication instantiates a new GetTenantSettingsResponseThrottleApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantSettingsResponseThrottleApplication() *GetTenantSettingsResponseThrottleApplication {
	this := GetTenantSettingsResponseThrottleApplication{}
	return &this
}

// NewGetTenantSettingsResponseThrottleApplicationWithDefaults instantiates a new GetTenantSettingsResponseThrottleApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantSettingsResponseThrottleApplicationWithDefaults() *GetTenantSettingsResponseThrottleApplication {
	this := GetTenantSettingsResponseThrottleApplication{}
	return &this
}

// GetPercentForSnapshots returns the PercentForSnapshots field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponseThrottleApplication) GetPercentForSnapshots() int32 {
	if o == nil || IsNil(o.PercentForSnapshots.Get()) {
		var ret int32
		return ret
	}
	return *o.PercentForSnapshots.Get()
}

// GetPercentForSnapshotsOk returns a tuple with the PercentForSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponseThrottleApplication) GetPercentForSnapshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PercentForSnapshots.Get(), o.PercentForSnapshots.IsSet()
}

// HasPercentForSnapshots returns a boolean if a field has been set.
func (o *GetTenantSettingsResponseThrottleApplication) HasPercentForSnapshots() bool {
	if o != nil && o.PercentForSnapshots.IsSet() {
		return true
	}

	return false
}

// SetPercentForSnapshots gets a reference to the given NullableInt32 and assigns it to the PercentForSnapshots field.
func (o *GetTenantSettingsResponseThrottleApplication) SetPercentForSnapshots(v int32) {
	o.PercentForSnapshots.Set(&v)
}

// SetPercentForSnapshotsNil sets the value for PercentForSnapshots to be an explicit nil
func (o *GetTenantSettingsResponseThrottleApplication) SetPercentForSnapshotsNil() {
	o.PercentForSnapshots.Set(nil)
}

// UnsetPercentForSnapshots ensures that no value is present for PercentForSnapshots, not even an explicit nil
func (o *GetTenantSettingsResponseThrottleApplication) UnsetPercentForSnapshots() {
	o.PercentForSnapshots.Unset()
}

func (o GetTenantSettingsResponseThrottleApplication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantSettingsResponseThrottleApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PercentForSnapshots.IsSet() {
		toSerialize["percentForSnapshots"] = o.PercentForSnapshots.Get()
	}
	return toSerialize, nil
}

type NullableGetTenantSettingsResponseThrottleApplication struct {
	value *GetTenantSettingsResponseThrottleApplication
	isSet bool
}

func (v NullableGetTenantSettingsResponseThrottleApplication) Get() *GetTenantSettingsResponseThrottleApplication {
	return v.value
}

func (v *NullableGetTenantSettingsResponseThrottleApplication) Set(val *GetTenantSettingsResponseThrottleApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantSettingsResponseThrottleApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantSettingsResponseThrottleApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantSettingsResponseThrottleApplication(val *GetTenantSettingsResponseThrottleApplication) *NullableGetTenantSettingsResponseThrottleApplication {
	return &NullableGetTenantSettingsResponseThrottleApplication{value: val, isSet: true}
}

func (v NullableGetTenantSettingsResponseThrottleApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantSettingsResponseThrottleApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
