/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Connectivity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Connectivity{}

// Connectivity struct for Connectivity
type Connectivity struct {
	Name                 string `json:"name"`
	Zones1               string `json:"zones1"`
	Systemtypes1         string `json:"systemtypes1" validate:"regexp=^(?:(?:rhel|sles|amzn|ubuntu)[, ])*(?:rhel|sles|amzn|ubuntu)$"`
	Zones2               string `json:"zones2"`
	Systemtypes2         string `json:"systemtypes2" validate:"regexp=^(?:(?:rhel|sles|amzn|ubuntu)[, ])*(?:rhel|sles|amzn|ubuntu)$"`
	Mediaprotocol        string `json:"mediaprotocol"`
	Replicationprotocol  string `json:"replicationprotocol"`
	Replicationbandwidth *int32 `json:"replicationbandwidth,omitempty"`
}

type _Connectivity Connectivity

// NewConnectivity instantiates a new Connectivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectivity(name string, zones1 string, systemtypes1 string, zones2 string, systemtypes2 string, mediaprotocol string, replicationprotocol string) *Connectivity {
	this := Connectivity{}
	this.Name = name
	this.Zones1 = zones1
	this.Systemtypes1 = systemtypes1
	this.Zones2 = zones2
	this.Systemtypes2 = systemtypes2
	this.Mediaprotocol = mediaprotocol
	this.Replicationprotocol = replicationprotocol
	return &this
}

// NewConnectivityWithDefaults instantiates a new Connectivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectivityWithDefaults() *Connectivity {
	this := Connectivity{}
	return &this
}

// GetName returns the Name field value
func (o *Connectivity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Connectivity) SetName(v string) {
	o.Name = v
}

// GetZones1 returns the Zones1 field value
func (o *Connectivity) GetZones1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zones1
}

// GetZones1Ok returns a tuple with the Zones1 field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetZones1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zones1, true
}

// SetZones1 sets field value
func (o *Connectivity) SetZones1(v string) {
	o.Zones1 = v
}

// GetSystemtypes1 returns the Systemtypes1 field value
func (o *Connectivity) GetSystemtypes1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Systemtypes1
}

// GetSystemtypes1Ok returns a tuple with the Systemtypes1 field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetSystemtypes1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Systemtypes1, true
}

// SetSystemtypes1 sets field value
func (o *Connectivity) SetSystemtypes1(v string) {
	o.Systemtypes1 = v
}

// GetZones2 returns the Zones2 field value
func (o *Connectivity) GetZones2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zones2
}

// GetZones2Ok returns a tuple with the Zones2 field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetZones2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zones2, true
}

// SetZones2 sets field value
func (o *Connectivity) SetZones2(v string) {
	o.Zones2 = v
}

// GetSystemtypes2 returns the Systemtypes2 field value
func (o *Connectivity) GetSystemtypes2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Systemtypes2
}

// GetSystemtypes2Ok returns a tuple with the Systemtypes2 field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetSystemtypes2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Systemtypes2, true
}

// SetSystemtypes2 sets field value
func (o *Connectivity) SetSystemtypes2(v string) {
	o.Systemtypes2 = v
}

// GetMediaprotocol returns the Mediaprotocol field value
func (o *Connectivity) GetMediaprotocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mediaprotocol
}

// GetMediaprotocolOk returns a tuple with the Mediaprotocol field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetMediaprotocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mediaprotocol, true
}

// SetMediaprotocol sets field value
func (o *Connectivity) SetMediaprotocol(v string) {
	o.Mediaprotocol = v
}

// GetReplicationprotocol returns the Replicationprotocol field value
func (o *Connectivity) GetReplicationprotocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Replicationprotocol
}

// GetReplicationprotocolOk returns a tuple with the Replicationprotocol field value
// and a boolean to check if the value has been set.
func (o *Connectivity) GetReplicationprotocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicationprotocol, true
}

// SetReplicationprotocol sets field value
func (o *Connectivity) SetReplicationprotocol(v string) {
	o.Replicationprotocol = v
}

// GetReplicationbandwidth returns the Replicationbandwidth field value if set, zero value otherwise.
func (o *Connectivity) GetReplicationbandwidth() int32 {
	if o == nil || IsNil(o.Replicationbandwidth) {
		var ret int32
		return ret
	}
	return *o.Replicationbandwidth
}

// GetReplicationbandwidthOk returns a tuple with the Replicationbandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Connectivity) GetReplicationbandwidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Replicationbandwidth) {
		return nil, false
	}
	return o.Replicationbandwidth, true
}

// HasReplicationbandwidth returns a boolean if a field has been set.
func (o *Connectivity) HasReplicationbandwidth() bool {
	if o != nil && !IsNil(o.Replicationbandwidth) {
		return true
	}

	return false
}

// SetReplicationbandwidth gets a reference to the given int32 and assigns it to the Replicationbandwidth field.
func (o *Connectivity) SetReplicationbandwidth(v int32) {
	o.Replicationbandwidth = &v
}

func (o Connectivity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Connectivity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["zones1"] = o.Zones1
	toSerialize["systemtypes1"] = o.Systemtypes1
	toSerialize["zones2"] = o.Zones2
	toSerialize["systemtypes2"] = o.Systemtypes2
	toSerialize["mediaprotocol"] = o.Mediaprotocol
	toSerialize["replicationprotocol"] = o.Replicationprotocol
	if !IsNil(o.Replicationbandwidth) {
		toSerialize["replicationbandwidth"] = o.Replicationbandwidth
	}
	return toSerialize, nil
}

func (o *Connectivity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"zones1",
		"systemtypes1",
		"zones2",
		"systemtypes2",
		"mediaprotocol",
		"replicationprotocol",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectivity := _Connectivity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConnectivity)

	if err != nil {
		return err
	}

	*o = Connectivity(varConnectivity)

	return err
}

type NullableConnectivity struct {
	value *Connectivity
	isSet bool
}

func (v NullableConnectivity) Get() *Connectivity {
	return v.value
}

func (v *NullableConnectivity) Set(val *Connectivity) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectivity) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectivity(val *Connectivity) *NullableConnectivity {
	return &NullableConnectivity{value: val, isSet: true}
}

func (v NullableConnectivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
