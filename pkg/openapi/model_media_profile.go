/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MediaProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaProfile{}

// MediaProfile struct for MediaProfile
type MediaProfile struct {
	Iopsread           *int32 `json:"iopsread,omitempty"`
	Iopswrite          *int32 `json:"iopswrite,omitempty"`
	Bandwidthread      *int32 `json:"bandwidthread,omitempty"`
	Bandwidthwrite     *int32 `json:"bandwidthwrite,omitempty"`
	Latencyread        *int32 `json:"latencyread,omitempty"`
	Latencywrite       *int32 `json:"latencywrite,omitempty"`
	Freeiopsread       *int32 `json:"freeiopsread,omitempty"`
	Freeiopswrite      *int32 `json:"freeiopswrite,omitempty"`
	Freebandwidthread  *int32 `json:"freebandwidthread,omitempty"`
	Freebandwidthwrite *int32 `json:"freebandwidthwrite,omitempty"`
}

// NewMediaProfile instantiates a new MediaProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaProfile() *MediaProfile {
	this := MediaProfile{}
	return &this
}

// NewMediaProfileWithDefaults instantiates a new MediaProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaProfileWithDefaults() *MediaProfile {
	this := MediaProfile{}
	return &this
}

// GetIopsread returns the Iopsread field value if set, zero value otherwise.
func (o *MediaProfile) GetIopsread() int32 {
	if o == nil || IsNil(o.Iopsread) {
		var ret int32
		return ret
	}
	return *o.Iopsread
}

// GetIopsreadOk returns a tuple with the Iopsread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetIopsreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Iopsread) {
		return nil, false
	}
	return o.Iopsread, true
}

// HasIopsread returns a boolean if a field has been set.
func (o *MediaProfile) HasIopsread() bool {
	if o != nil && !IsNil(o.Iopsread) {
		return true
	}

	return false
}

// SetIopsread gets a reference to the given int32 and assigns it to the Iopsread field.
func (o *MediaProfile) SetIopsread(v int32) {
	o.Iopsread = &v
}

// GetIopswrite returns the Iopswrite field value if set, zero value otherwise.
func (o *MediaProfile) GetIopswrite() int32 {
	if o == nil || IsNil(o.Iopswrite) {
		var ret int32
		return ret
	}
	return *o.Iopswrite
}

// GetIopswriteOk returns a tuple with the Iopswrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetIopswriteOk() (*int32, bool) {
	if o == nil || IsNil(o.Iopswrite) {
		return nil, false
	}
	return o.Iopswrite, true
}

// HasIopswrite returns a boolean if a field has been set.
func (o *MediaProfile) HasIopswrite() bool {
	if o != nil && !IsNil(o.Iopswrite) {
		return true
	}

	return false
}

// SetIopswrite gets a reference to the given int32 and assigns it to the Iopswrite field.
func (o *MediaProfile) SetIopswrite(v int32) {
	o.Iopswrite = &v
}

// GetBandwidthread returns the Bandwidthread field value if set, zero value otherwise.
func (o *MediaProfile) GetBandwidthread() int32 {
	if o == nil || IsNil(o.Bandwidthread) {
		var ret int32
		return ret
	}
	return *o.Bandwidthread
}

// GetBandwidthreadOk returns a tuple with the Bandwidthread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetBandwidthreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Bandwidthread) {
		return nil, false
	}
	return o.Bandwidthread, true
}

// HasBandwidthread returns a boolean if a field has been set.
func (o *MediaProfile) HasBandwidthread() bool {
	if o != nil && !IsNil(o.Bandwidthread) {
		return true
	}

	return false
}

// SetBandwidthread gets a reference to the given int32 and assigns it to the Bandwidthread field.
func (o *MediaProfile) SetBandwidthread(v int32) {
	o.Bandwidthread = &v
}

// GetBandwidthwrite returns the Bandwidthwrite field value if set, zero value otherwise.
func (o *MediaProfile) GetBandwidthwrite() int32 {
	if o == nil || IsNil(o.Bandwidthwrite) {
		var ret int32
		return ret
	}
	return *o.Bandwidthwrite
}

// GetBandwidthwriteOk returns a tuple with the Bandwidthwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetBandwidthwriteOk() (*int32, bool) {
	if o == nil || IsNil(o.Bandwidthwrite) {
		return nil, false
	}
	return o.Bandwidthwrite, true
}

// HasBandwidthwrite returns a boolean if a field has been set.
func (o *MediaProfile) HasBandwidthwrite() bool {
	if o != nil && !IsNil(o.Bandwidthwrite) {
		return true
	}

	return false
}

// SetBandwidthwrite gets a reference to the given int32 and assigns it to the Bandwidthwrite field.
func (o *MediaProfile) SetBandwidthwrite(v int32) {
	o.Bandwidthwrite = &v
}

// GetLatencyread returns the Latencyread field value if set, zero value otherwise.
func (o *MediaProfile) GetLatencyread() int32 {
	if o == nil || IsNil(o.Latencyread) {
		var ret int32
		return ret
	}
	return *o.Latencyread
}

// GetLatencyreadOk returns a tuple with the Latencyread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetLatencyreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Latencyread) {
		return nil, false
	}
	return o.Latencyread, true
}

// HasLatencyread returns a boolean if a field has been set.
func (o *MediaProfile) HasLatencyread() bool {
	if o != nil && !IsNil(o.Latencyread) {
		return true
	}

	return false
}

// SetLatencyread gets a reference to the given int32 and assigns it to the Latencyread field.
func (o *MediaProfile) SetLatencyread(v int32) {
	o.Latencyread = &v
}

// GetLatencywrite returns the Latencywrite field value if set, zero value otherwise.
func (o *MediaProfile) GetLatencywrite() int32 {
	if o == nil || IsNil(o.Latencywrite) {
		var ret int32
		return ret
	}
	return *o.Latencywrite
}

// GetLatencywriteOk returns a tuple with the Latencywrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetLatencywriteOk() (*int32, bool) {
	if o == nil || IsNil(o.Latencywrite) {
		return nil, false
	}
	return o.Latencywrite, true
}

// HasLatencywrite returns a boolean if a field has been set.
func (o *MediaProfile) HasLatencywrite() bool {
	if o != nil && !IsNil(o.Latencywrite) {
		return true
	}

	return false
}

// SetLatencywrite gets a reference to the given int32 and assigns it to the Latencywrite field.
func (o *MediaProfile) SetLatencywrite(v int32) {
	o.Latencywrite = &v
}

// GetFreeiopsread returns the Freeiopsread field value if set, zero value otherwise.
func (o *MediaProfile) GetFreeiopsread() int32 {
	if o == nil || IsNil(o.Freeiopsread) {
		var ret int32
		return ret
	}
	return *o.Freeiopsread
}

// GetFreeiopsreadOk returns a tuple with the Freeiopsread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetFreeiopsreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Freeiopsread) {
		return nil, false
	}
	return o.Freeiopsread, true
}

// HasFreeiopsread returns a boolean if a field has been set.
func (o *MediaProfile) HasFreeiopsread() bool {
	if o != nil && !IsNil(o.Freeiopsread) {
		return true
	}

	return false
}

// SetFreeiopsread gets a reference to the given int32 and assigns it to the Freeiopsread field.
func (o *MediaProfile) SetFreeiopsread(v int32) {
	o.Freeiopsread = &v
}

// GetFreeiopswrite returns the Freeiopswrite field value if set, zero value otherwise.
func (o *MediaProfile) GetFreeiopswrite() int32 {
	if o == nil || IsNil(o.Freeiopswrite) {
		var ret int32
		return ret
	}
	return *o.Freeiopswrite
}

// GetFreeiopswriteOk returns a tuple with the Freeiopswrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetFreeiopswriteOk() (*int32, bool) {
	if o == nil || IsNil(o.Freeiopswrite) {
		return nil, false
	}
	return o.Freeiopswrite, true
}

// HasFreeiopswrite returns a boolean if a field has been set.
func (o *MediaProfile) HasFreeiopswrite() bool {
	if o != nil && !IsNil(o.Freeiopswrite) {
		return true
	}

	return false
}

// SetFreeiopswrite gets a reference to the given int32 and assigns it to the Freeiopswrite field.
func (o *MediaProfile) SetFreeiopswrite(v int32) {
	o.Freeiopswrite = &v
}

// GetFreebandwidthread returns the Freebandwidthread field value if set, zero value otherwise.
func (o *MediaProfile) GetFreebandwidthread() int32 {
	if o == nil || IsNil(o.Freebandwidthread) {
		var ret int32
		return ret
	}
	return *o.Freebandwidthread
}

// GetFreebandwidthreadOk returns a tuple with the Freebandwidthread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetFreebandwidthreadOk() (*int32, bool) {
	if o == nil || IsNil(o.Freebandwidthread) {
		return nil, false
	}
	return o.Freebandwidthread, true
}

// HasFreebandwidthread returns a boolean if a field has been set.
func (o *MediaProfile) HasFreebandwidthread() bool {
	if o != nil && !IsNil(o.Freebandwidthread) {
		return true
	}

	return false
}

// SetFreebandwidthread gets a reference to the given int32 and assigns it to the Freebandwidthread field.
func (o *MediaProfile) SetFreebandwidthread(v int32) {
	o.Freebandwidthread = &v
}

// GetFreebandwidthwrite returns the Freebandwidthwrite field value if set, zero value otherwise.
func (o *MediaProfile) GetFreebandwidthwrite() int32 {
	if o == nil || IsNil(o.Freebandwidthwrite) {
		var ret int32
		return ret
	}
	return *o.Freebandwidthwrite
}

// GetFreebandwidthwriteOk returns a tuple with the Freebandwidthwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaProfile) GetFreebandwidthwriteOk() (*int32, bool) {
	if o == nil || IsNil(o.Freebandwidthwrite) {
		return nil, false
	}
	return o.Freebandwidthwrite, true
}

// HasFreebandwidthwrite returns a boolean if a field has been set.
func (o *MediaProfile) HasFreebandwidthwrite() bool {
	if o != nil && !IsNil(o.Freebandwidthwrite) {
		return true
	}

	return false
}

// SetFreebandwidthwrite gets a reference to the given int32 and assigns it to the Freebandwidthwrite field.
func (o *MediaProfile) SetFreebandwidthwrite(v int32) {
	o.Freebandwidthwrite = &v
}

func (o MediaProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Iopsread) {
		toSerialize["iopsread"] = o.Iopsread
	}
	if !IsNil(o.Iopswrite) {
		toSerialize["iopswrite"] = o.Iopswrite
	}
	if !IsNil(o.Bandwidthread) {
		toSerialize["bandwidthread"] = o.Bandwidthread
	}
	if !IsNil(o.Bandwidthwrite) {
		toSerialize["bandwidthwrite"] = o.Bandwidthwrite
	}
	if !IsNil(o.Latencyread) {
		toSerialize["latencyread"] = o.Latencyread
	}
	if !IsNil(o.Latencywrite) {
		toSerialize["latencywrite"] = o.Latencywrite
	}
	if !IsNil(o.Freeiopsread) {
		toSerialize["freeiopsread"] = o.Freeiopsread
	}
	if !IsNil(o.Freeiopswrite) {
		toSerialize["freeiopswrite"] = o.Freeiopswrite
	}
	if !IsNil(o.Freebandwidthread) {
		toSerialize["freebandwidthread"] = o.Freebandwidthread
	}
	if !IsNil(o.Freebandwidthwrite) {
		toSerialize["freebandwidthwrite"] = o.Freebandwidthwrite
	}
	return toSerialize, nil
}

type NullableMediaProfile struct {
	value *MediaProfile
	isSet bool
}

func (v NullableMediaProfile) Get() *MediaProfile {
	return v.value
}

func (v *NullableMediaProfile) Set(val *MediaProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaProfile(val *MediaProfile) *NullableMediaProfile {
	return &NullableMediaProfile{value: val, isSet: true}
}

func (v NullableMediaProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
