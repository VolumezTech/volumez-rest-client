/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Volume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Volume{}

// Volume struct for Volume
type Volume struct {
	Name                       string  `json:"name"`
	Volumeid                   *string `json:"volumeid,omitempty"`
	Type                       string  `json:"type"`
	Contentvolume              *string `json:"contentvolume,omitempty"`
	Contentsnapshot            *string `json:"contentsnapshot,omitempty"`
	Size                       int32   `json:"size"`
	Maxsize                    *int32  `json:"maxsize,omitempty"`
	Policy                     string  `json:"policy"`
	Consistencygroup           *string `json:"consistencygroup,omitempty"`
	Node                       *string `json:"node,omitempty"`
	Zone                       *string `json:"zone,omitempty"`
	Zonereplica                *string `json:"zonereplica,omitempty"`
	Volumegroupname            *string `json:"volumegroupname,omitempty"`
	Volumegroupid              *string `json:"volumegroupid,omitempty"`
	Replicationnode            *string `json:"replicationnode,omitempty"`
	Replicationvolumegroupname *string `json:"replicationvolumegroupname,omitempty"`
	Replicationvolumegroupid   *string `json:"replicationvolumegroupid,omitempty"`
	Volumerecoveryjob          *string `json:"volumerecoveryjob,omitempty"`
	State                      *string `json:"state,omitempty"`
	Status                     *string `json:"status,omitempty"`
	Progress                   *int32  `json:"progress,omitempty"`
	Capacitygroup              *string `json:"capacitygroup,omitempty"`
	Throttlingscheme           *string `json:"throttlingscheme,omitempty"`
	Allowdatamovement          *bool   `json:"allowdatamovement,omitempty"`
	Flavor                     *string `json:"flavor,omitempty"`
}

type _Volume Volume

// NewVolume instantiates a new Volume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolume(name string, type_ string, size int32, policy string) *Volume {
	this := Volume{}
	this.Name = name
	this.Type = type_
	this.Size = size
	this.Policy = policy
	var allowdatamovement bool = false
	this.Allowdatamovement = &allowdatamovement
	return &this
}

// NewVolumeWithDefaults instantiates a new Volume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeWithDefaults() *Volume {
	this := Volume{}
	var allowdatamovement bool = false
	this.Allowdatamovement = &allowdatamovement
	return &this
}

// GetName returns the Name field value
func (o *Volume) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Volume) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Volume) SetName(v string) {
	o.Name = v
}

// GetVolumeid returns the Volumeid field value if set, zero value otherwise.
func (o *Volume) GetVolumeid() string {
	if o == nil || IsNil(o.Volumeid) {
		var ret string
		return ret
	}
	return *o.Volumeid
}

// GetVolumeidOk returns a tuple with the Volumeid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumeidOk() (*string, bool) {
	if o == nil || IsNil(o.Volumeid) {
		return nil, false
	}
	return o.Volumeid, true
}

// HasVolumeid returns a boolean if a field has been set.
func (o *Volume) HasVolumeid() bool {
	if o != nil && !IsNil(o.Volumeid) {
		return true
	}

	return false
}

// SetVolumeid gets a reference to the given string and assigns it to the Volumeid field.
func (o *Volume) SetVolumeid(v string) {
	o.Volumeid = &v
}

// GetType returns the Type field value
func (o *Volume) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Volume) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Volume) SetType(v string) {
	o.Type = v
}

// GetContentvolume returns the Contentvolume field value if set, zero value otherwise.
func (o *Volume) GetContentvolume() string {
	if o == nil || IsNil(o.Contentvolume) {
		var ret string
		return ret
	}
	return *o.Contentvolume
}

// GetContentvolumeOk returns a tuple with the Contentvolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetContentvolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Contentvolume) {
		return nil, false
	}
	return o.Contentvolume, true
}

// HasContentvolume returns a boolean if a field has been set.
func (o *Volume) HasContentvolume() bool {
	if o != nil && !IsNil(o.Contentvolume) {
		return true
	}

	return false
}

// SetContentvolume gets a reference to the given string and assigns it to the Contentvolume field.
func (o *Volume) SetContentvolume(v string) {
	o.Contentvolume = &v
}

// GetContentsnapshot returns the Contentsnapshot field value if set, zero value otherwise.
func (o *Volume) GetContentsnapshot() string {
	if o == nil || IsNil(o.Contentsnapshot) {
		var ret string
		return ret
	}
	return *o.Contentsnapshot
}

// GetContentsnapshotOk returns a tuple with the Contentsnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetContentsnapshotOk() (*string, bool) {
	if o == nil || IsNil(o.Contentsnapshot) {
		return nil, false
	}
	return o.Contentsnapshot, true
}

// HasContentsnapshot returns a boolean if a field has been set.
func (o *Volume) HasContentsnapshot() bool {
	if o != nil && !IsNil(o.Contentsnapshot) {
		return true
	}

	return false
}

// SetContentsnapshot gets a reference to the given string and assigns it to the Contentsnapshot field.
func (o *Volume) SetContentsnapshot(v string) {
	o.Contentsnapshot = &v
}

// GetSize returns the Size field value
func (o *Volume) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *Volume) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *Volume) SetSize(v int32) {
	o.Size = v
}

// GetMaxsize returns the Maxsize field value if set, zero value otherwise.
func (o *Volume) GetMaxsize() int32 {
	if o == nil || IsNil(o.Maxsize) {
		var ret int32
		return ret
	}
	return *o.Maxsize
}

// GetMaxsizeOk returns a tuple with the Maxsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetMaxsizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Maxsize) {
		return nil, false
	}
	return o.Maxsize, true
}

// HasMaxsize returns a boolean if a field has been set.
func (o *Volume) HasMaxsize() bool {
	if o != nil && !IsNil(o.Maxsize) {
		return true
	}

	return false
}

// SetMaxsize gets a reference to the given int32 and assigns it to the Maxsize field.
func (o *Volume) SetMaxsize(v int32) {
	o.Maxsize = &v
}

// GetPolicy returns the Policy field value
func (o *Volume) GetPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *Volume) GetPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *Volume) SetPolicy(v string) {
	o.Policy = v
}

// GetConsistencygroup returns the Consistencygroup field value if set, zero value otherwise.
func (o *Volume) GetConsistencygroup() string {
	if o == nil || IsNil(o.Consistencygroup) {
		var ret string
		return ret
	}
	return *o.Consistencygroup
}

// GetConsistencygroupOk returns a tuple with the Consistencygroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetConsistencygroupOk() (*string, bool) {
	if o == nil || IsNil(o.Consistencygroup) {
		return nil, false
	}
	return o.Consistencygroup, true
}

// HasConsistencygroup returns a boolean if a field has been set.
func (o *Volume) HasConsistencygroup() bool {
	if o != nil && !IsNil(o.Consistencygroup) {
		return true
	}

	return false
}

// SetConsistencygroup gets a reference to the given string and assigns it to the Consistencygroup field.
func (o *Volume) SetConsistencygroup(v string) {
	o.Consistencygroup = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *Volume) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *Volume) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *Volume) SetNode(v string) {
	o.Node = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *Volume) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *Volume) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *Volume) SetZone(v string) {
	o.Zone = &v
}

// GetZonereplica returns the Zonereplica field value if set, zero value otherwise.
func (o *Volume) GetZonereplica() string {
	if o == nil || IsNil(o.Zonereplica) {
		var ret string
		return ret
	}
	return *o.Zonereplica
}

// GetZonereplicaOk returns a tuple with the Zonereplica field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetZonereplicaOk() (*string, bool) {
	if o == nil || IsNil(o.Zonereplica) {
		return nil, false
	}
	return o.Zonereplica, true
}

// HasZonereplica returns a boolean if a field has been set.
func (o *Volume) HasZonereplica() bool {
	if o != nil && !IsNil(o.Zonereplica) {
		return true
	}

	return false
}

// SetZonereplica gets a reference to the given string and assigns it to the Zonereplica field.
func (o *Volume) SetZonereplica(v string) {
	o.Zonereplica = &v
}

// GetVolumegroupname returns the Volumegroupname field value if set, zero value otherwise.
func (o *Volume) GetVolumegroupname() string {
	if o == nil || IsNil(o.Volumegroupname) {
		var ret string
		return ret
	}
	return *o.Volumegroupname
}

// GetVolumegroupnameOk returns a tuple with the Volumegroupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumegroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Volumegroupname) {
		return nil, false
	}
	return o.Volumegroupname, true
}

// HasVolumegroupname returns a boolean if a field has been set.
func (o *Volume) HasVolumegroupname() bool {
	if o != nil && !IsNil(o.Volumegroupname) {
		return true
	}

	return false
}

// SetVolumegroupname gets a reference to the given string and assigns it to the Volumegroupname field.
func (o *Volume) SetVolumegroupname(v string) {
	o.Volumegroupname = &v
}

// GetVolumegroupid returns the Volumegroupid field value if set, zero value otherwise.
func (o *Volume) GetVolumegroupid() string {
	if o == nil || IsNil(o.Volumegroupid) {
		var ret string
		return ret
	}
	return *o.Volumegroupid
}

// GetVolumegroupidOk returns a tuple with the Volumegroupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumegroupidOk() (*string, bool) {
	if o == nil || IsNil(o.Volumegroupid) {
		return nil, false
	}
	return o.Volumegroupid, true
}

// HasVolumegroupid returns a boolean if a field has been set.
func (o *Volume) HasVolumegroupid() bool {
	if o != nil && !IsNil(o.Volumegroupid) {
		return true
	}

	return false
}

// SetVolumegroupid gets a reference to the given string and assigns it to the Volumegroupid field.
func (o *Volume) SetVolumegroupid(v string) {
	o.Volumegroupid = &v
}

// GetReplicationnode returns the Replicationnode field value if set, zero value otherwise.
func (o *Volume) GetReplicationnode() string {
	if o == nil || IsNil(o.Replicationnode) {
		var ret string
		return ret
	}
	return *o.Replicationnode
}

// GetReplicationnodeOk returns a tuple with the Replicationnode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationnodeOk() (*string, bool) {
	if o == nil || IsNil(o.Replicationnode) {
		return nil, false
	}
	return o.Replicationnode, true
}

// HasReplicationnode returns a boolean if a field has been set.
func (o *Volume) HasReplicationnode() bool {
	if o != nil && !IsNil(o.Replicationnode) {
		return true
	}

	return false
}

// SetReplicationnode gets a reference to the given string and assigns it to the Replicationnode field.
func (o *Volume) SetReplicationnode(v string) {
	o.Replicationnode = &v
}

// GetReplicationvolumegroupname returns the Replicationvolumegroupname field value if set, zero value otherwise.
func (o *Volume) GetReplicationvolumegroupname() string {
	if o == nil || IsNil(o.Replicationvolumegroupname) {
		var ret string
		return ret
	}
	return *o.Replicationvolumegroupname
}

// GetReplicationvolumegroupnameOk returns a tuple with the Replicationvolumegroupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationvolumegroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Replicationvolumegroupname) {
		return nil, false
	}
	return o.Replicationvolumegroupname, true
}

// HasReplicationvolumegroupname returns a boolean if a field has been set.
func (o *Volume) HasReplicationvolumegroupname() bool {
	if o != nil && !IsNil(o.Replicationvolumegroupname) {
		return true
	}

	return false
}

// SetReplicationvolumegroupname gets a reference to the given string and assigns it to the Replicationvolumegroupname field.
func (o *Volume) SetReplicationvolumegroupname(v string) {
	o.Replicationvolumegroupname = &v
}

// GetReplicationvolumegroupid returns the Replicationvolumegroupid field value if set, zero value otherwise.
func (o *Volume) GetReplicationvolumegroupid() string {
	if o == nil || IsNil(o.Replicationvolumegroupid) {
		var ret string
		return ret
	}
	return *o.Replicationvolumegroupid
}

// GetReplicationvolumegroupidOk returns a tuple with the Replicationvolumegroupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationvolumegroupidOk() (*string, bool) {
	if o == nil || IsNil(o.Replicationvolumegroupid) {
		return nil, false
	}
	return o.Replicationvolumegroupid, true
}

// HasReplicationvolumegroupid returns a boolean if a field has been set.
func (o *Volume) HasReplicationvolumegroupid() bool {
	if o != nil && !IsNil(o.Replicationvolumegroupid) {
		return true
	}

	return false
}

// SetReplicationvolumegroupid gets a reference to the given string and assigns it to the Replicationvolumegroupid field.
func (o *Volume) SetReplicationvolumegroupid(v string) {
	o.Replicationvolumegroupid = &v
}

// GetVolumerecoveryjob returns the Volumerecoveryjob field value if set, zero value otherwise.
func (o *Volume) GetVolumerecoveryjob() string {
	if o == nil || IsNil(o.Volumerecoveryjob) {
		var ret string
		return ret
	}
	return *o.Volumerecoveryjob
}

// GetVolumerecoveryjobOk returns a tuple with the Volumerecoveryjob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumerecoveryjobOk() (*string, bool) {
	if o == nil || IsNil(o.Volumerecoveryjob) {
		return nil, false
	}
	return o.Volumerecoveryjob, true
}

// HasVolumerecoveryjob returns a boolean if a field has been set.
func (o *Volume) HasVolumerecoveryjob() bool {
	if o != nil && !IsNil(o.Volumerecoveryjob) {
		return true
	}

	return false
}

// SetVolumerecoveryjob gets a reference to the given string and assigns it to the Volumerecoveryjob field.
func (o *Volume) SetVolumerecoveryjob(v string) {
	o.Volumerecoveryjob = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Volume) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Volume) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Volume) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Volume) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Volume) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Volume) SetStatus(v string) {
	o.Status = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *Volume) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *Volume) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *Volume) SetProgress(v int32) {
	o.Progress = &v
}

// GetCapacitygroup returns the Capacitygroup field value if set, zero value otherwise.
func (o *Volume) GetCapacitygroup() string {
	if o == nil || IsNil(o.Capacitygroup) {
		var ret string
		return ret
	}
	return *o.Capacitygroup
}

// GetCapacitygroupOk returns a tuple with the Capacitygroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetCapacitygroupOk() (*string, bool) {
	if o == nil || IsNil(o.Capacitygroup) {
		return nil, false
	}
	return o.Capacitygroup, true
}

// HasCapacitygroup returns a boolean if a field has been set.
func (o *Volume) HasCapacitygroup() bool {
	if o != nil && !IsNil(o.Capacitygroup) {
		return true
	}

	return false
}

// SetCapacitygroup gets a reference to the given string and assigns it to the Capacitygroup field.
func (o *Volume) SetCapacitygroup(v string) {
	o.Capacitygroup = &v
}

// GetThrottlingscheme returns the Throttlingscheme field value if set, zero value otherwise.
func (o *Volume) GetThrottlingscheme() string {
	if o == nil || IsNil(o.Throttlingscheme) {
		var ret string
		return ret
	}
	return *o.Throttlingscheme
}

// GetThrottlingschemeOk returns a tuple with the Throttlingscheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetThrottlingschemeOk() (*string, bool) {
	if o == nil || IsNil(o.Throttlingscheme) {
		return nil, false
	}
	return o.Throttlingscheme, true
}

// HasThrottlingscheme returns a boolean if a field has been set.
func (o *Volume) HasThrottlingscheme() bool {
	if o != nil && !IsNil(o.Throttlingscheme) {
		return true
	}

	return false
}

// SetThrottlingscheme gets a reference to the given string and assigns it to the Throttlingscheme field.
func (o *Volume) SetThrottlingscheme(v string) {
	o.Throttlingscheme = &v
}

// GetAllowdatamovement returns the Allowdatamovement field value if set, zero value otherwise.
func (o *Volume) GetAllowdatamovement() bool {
	if o == nil || IsNil(o.Allowdatamovement) {
		var ret bool
		return ret
	}
	return *o.Allowdatamovement
}

// GetAllowdatamovementOk returns a tuple with the Allowdatamovement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetAllowdatamovementOk() (*bool, bool) {
	if o == nil || IsNil(o.Allowdatamovement) {
		return nil, false
	}
	return o.Allowdatamovement, true
}

// HasAllowdatamovement returns a boolean if a field has been set.
func (o *Volume) HasAllowdatamovement() bool {
	if o != nil && !IsNil(o.Allowdatamovement) {
		return true
	}

	return false
}

// SetAllowdatamovement gets a reference to the given bool and assigns it to the Allowdatamovement field.
func (o *Volume) SetAllowdatamovement(v bool) {
	o.Allowdatamovement = &v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *Volume) GetFlavor() string {
	if o == nil || IsNil(o.Flavor) {
		var ret string
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetFlavorOk() (*string, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *Volume) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given string and assigns it to the Flavor field.
func (o *Volume) SetFlavor(v string) {
	o.Flavor = &v
}

func (o Volume) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Volume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Volumeid) {
		toSerialize["volumeid"] = o.Volumeid
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Contentvolume) {
		toSerialize["contentvolume"] = o.Contentvolume
	}
	if !IsNil(o.Contentsnapshot) {
		toSerialize["contentsnapshot"] = o.Contentsnapshot
	}
	toSerialize["size"] = o.Size
	if !IsNil(o.Maxsize) {
		toSerialize["maxsize"] = o.Maxsize
	}
	toSerialize["policy"] = o.Policy
	if !IsNil(o.Consistencygroup) {
		toSerialize["consistencygroup"] = o.Consistencygroup
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Zonereplica) {
		toSerialize["zonereplica"] = o.Zonereplica
	}
	if !IsNil(o.Volumegroupname) {
		toSerialize["volumegroupname"] = o.Volumegroupname
	}
	if !IsNil(o.Volumegroupid) {
		toSerialize["volumegroupid"] = o.Volumegroupid
	}
	if !IsNil(o.Replicationnode) {
		toSerialize["replicationnode"] = o.Replicationnode
	}
	if !IsNil(o.Replicationvolumegroupname) {
		toSerialize["replicationvolumegroupname"] = o.Replicationvolumegroupname
	}
	if !IsNil(o.Replicationvolumegroupid) {
		toSerialize["replicationvolumegroupid"] = o.Replicationvolumegroupid
	}
	if !IsNil(o.Volumerecoveryjob) {
		toSerialize["volumerecoveryjob"] = o.Volumerecoveryjob
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Capacitygroup) {
		toSerialize["capacitygroup"] = o.Capacitygroup
	}
	if !IsNil(o.Throttlingscheme) {
		toSerialize["throttlingscheme"] = o.Throttlingscheme
	}
	if !IsNil(o.Allowdatamovement) {
		toSerialize["allowdatamovement"] = o.Allowdatamovement
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	return toSerialize, nil
}

func (o *Volume) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"size",
		"policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolume := _Volume{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolume)

	if err != nil {
		return err
	}

	*o = Volume(varVolume)

	return err
}

type NullableVolume struct {
	value *Volume
	isSet bool
}

func (v NullableVolume) Get() *Volume {
	return v.value
}

func (v *NullableVolume) Set(val *Volume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolume(val *Volume) *NullableVolume {
	return &NullableVolume{value: val, isSet: true}
}

func (v NullableVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
