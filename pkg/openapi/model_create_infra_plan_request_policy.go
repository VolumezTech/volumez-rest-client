/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 9cdeb26f
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateInfraPlanRequestPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInfraPlanRequestPolicy{}

// CreateInfraPlanRequestPolicy struct for CreateInfraPlanRequestPolicy
type CreateInfraPlanRequestPolicy struct {
	Name     *string                               `json:"name,omitempty"`
	Settings *CreateInfraPlanRequestPolicySettings `json:"settings,omitempty"`
}

// NewCreateInfraPlanRequestPolicy instantiates a new CreateInfraPlanRequestPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInfraPlanRequestPolicy() *CreateInfraPlanRequestPolicy {
	this := CreateInfraPlanRequestPolicy{}
	return &this
}

// NewCreateInfraPlanRequestPolicyWithDefaults instantiates a new CreateInfraPlanRequestPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInfraPlanRequestPolicyWithDefaults() *CreateInfraPlanRequestPolicy {
	this := CreateInfraPlanRequestPolicy{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateInfraPlanRequestPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraPlanRequestPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateInfraPlanRequestPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateInfraPlanRequestPolicy) SetName(v string) {
	o.Name = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CreateInfraPlanRequestPolicy) GetSettings() CreateInfraPlanRequestPolicySettings {
	if o == nil || IsNil(o.Settings) {
		var ret CreateInfraPlanRequestPolicySettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraPlanRequestPolicy) GetSettingsOk() (*CreateInfraPlanRequestPolicySettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CreateInfraPlanRequestPolicy) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CreateInfraPlanRequestPolicySettings and assigns it to the Settings field.
func (o *CreateInfraPlanRequestPolicy) SetSettings(v CreateInfraPlanRequestPolicySettings) {
	o.Settings = &v
}

func (o CreateInfraPlanRequestPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInfraPlanRequestPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableCreateInfraPlanRequestPolicy struct {
	value *CreateInfraPlanRequestPolicy
	isSet bool
}

func (v NullableCreateInfraPlanRequestPolicy) Get() *CreateInfraPlanRequestPolicy {
	return v.value
}

func (v *NullableCreateInfraPlanRequestPolicy) Set(val *CreateInfraPlanRequestPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInfraPlanRequestPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInfraPlanRequestPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInfraPlanRequestPolicy(val *CreateInfraPlanRequestPolicy) *NullableCreateInfraPlanRequestPolicy {
	return &NullableCreateInfraPlanRequestPolicy{value: val, isSet: true}
}

func (v NullableCreateInfraPlanRequestPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInfraPlanRequestPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
