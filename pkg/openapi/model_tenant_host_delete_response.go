/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TenantHostDeleteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantHostDeleteResponse{}

// TenantHostDeleteResponse struct for TenantHostDeleteResponse
type TenantHostDeleteResponse struct {
	StatusCode int32   `json:"StatusCode"`
	Message    *string `json:"Message,omitempty"`
}

type _TenantHostDeleteResponse TenantHostDeleteResponse

// NewTenantHostDeleteResponse instantiates a new TenantHostDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantHostDeleteResponse(statusCode int32) *TenantHostDeleteResponse {
	this := TenantHostDeleteResponse{}
	this.StatusCode = statusCode
	return &this
}

// NewTenantHostDeleteResponseWithDefaults instantiates a new TenantHostDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantHostDeleteResponseWithDefaults() *TenantHostDeleteResponse {
	this := TenantHostDeleteResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *TenantHostDeleteResponse) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *TenantHostDeleteResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *TenantHostDeleteResponse) SetStatusCode(v int32) {
	o.StatusCode = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *TenantHostDeleteResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantHostDeleteResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *TenantHostDeleteResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *TenantHostDeleteResponse) SetMessage(v string) {
	o.Message = &v
}

func (o TenantHostDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantHostDeleteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["StatusCode"] = o.StatusCode
	if !IsNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	return toSerialize, nil
}

func (o *TenantHostDeleteResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"StatusCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantHostDeleteResponse := _TenantHostDeleteResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantHostDeleteResponse)

	if err != nil {
		return err
	}

	*o = TenantHostDeleteResponse(varTenantHostDeleteResponse)

	return err
}

type NullableTenantHostDeleteResponse struct {
	value *TenantHostDeleteResponse
	isSet bool
}

func (v NullableTenantHostDeleteResponse) Get() *TenantHostDeleteResponse {
	return v.value
}

func (v *NullableTenantHostDeleteResponse) Set(val *TenantHostDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantHostDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantHostDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantHostDeleteResponse(val *TenantHostDeleteResponse) *NullableTenantHostDeleteResponse {
	return &NullableTenantHostDeleteResponse{value: val, isSet: true}
}

func (v NullableTenantHostDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantHostDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
