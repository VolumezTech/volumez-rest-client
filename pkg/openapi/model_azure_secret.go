/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 8d1ee8c4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSecret{}

// AzureSecret struct for AzureSecret
type AzureSecret struct {
	Id    *string `json:"id,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAzureSecret instantiates a new AzureSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureSecret() *AzureSecret {
	this := AzureSecret{}
	return &this
}

// NewAzureSecretWithDefaults instantiates a new AzureSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSecretWithDefaults() *AzureSecret {
	this := AzureSecret{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureSecret) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSecret) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureSecret) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureSecret) SetId(v string) {
	o.Id = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AzureSecret) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSecret) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AzureSecret) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AzureSecret) SetValue(v string) {
	o.Value = &v
}

func (o AzureSecret) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableAzureSecret struct {
	value *AzureSecret
	isSet bool
}

func (v NullableAzureSecret) Get() *AzureSecret {
	return v.value
}

func (v *NullableAzureSecret) Set(val *AzureSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSecret(val *AzureSecret) *NullableAzureSecret {
	return &NullableAzureSecret{value: val, isSet: true}
}

func (v NullableAzureSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
