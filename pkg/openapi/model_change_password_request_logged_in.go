/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 9cdeb26f
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChangePasswordRequestLoggedIn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePasswordRequestLoggedIn{}

// ChangePasswordRequestLoggedIn struct for ChangePasswordRequestLoggedIn
type ChangePasswordRequestLoggedIn struct {
	Oldpassword *string `json:"oldpassword,omitempty"`
	Email       *string `json:"email,omitempty"`
	Newpassword *string `json:"newpassword,omitempty"`
	OldPassword *string `json:"oldPassword,omitempty"`
	NewPassword *string `json:"newPassword,omitempty"`
}

// NewChangePasswordRequestLoggedIn instantiates a new ChangePasswordRequestLoggedIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePasswordRequestLoggedIn() *ChangePasswordRequestLoggedIn {
	this := ChangePasswordRequestLoggedIn{}
	return &this
}

// NewChangePasswordRequestLoggedInWithDefaults instantiates a new ChangePasswordRequestLoggedIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePasswordRequestLoggedInWithDefaults() *ChangePasswordRequestLoggedIn {
	this := ChangePasswordRequestLoggedIn{}
	return &this
}

// GetOldpassword returns the Oldpassword field value if set, zero value otherwise.
func (o *ChangePasswordRequestLoggedIn) GetOldpassword() string {
	if o == nil || IsNil(o.Oldpassword) {
		var ret string
		return ret
	}
	return *o.Oldpassword
}

// GetOldpasswordOk returns a tuple with the Oldpassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordRequestLoggedIn) GetOldpasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Oldpassword) {
		return nil, false
	}
	return o.Oldpassword, true
}

// HasOldpassword returns a boolean if a field has been set.
func (o *ChangePasswordRequestLoggedIn) HasOldpassword() bool {
	if o != nil && !IsNil(o.Oldpassword) {
		return true
	}

	return false
}

// SetOldpassword gets a reference to the given string and assigns it to the Oldpassword field.
func (o *ChangePasswordRequestLoggedIn) SetOldpassword(v string) {
	o.Oldpassword = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ChangePasswordRequestLoggedIn) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordRequestLoggedIn) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ChangePasswordRequestLoggedIn) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ChangePasswordRequestLoggedIn) SetEmail(v string) {
	o.Email = &v
}

// GetNewpassword returns the Newpassword field value if set, zero value otherwise.
func (o *ChangePasswordRequestLoggedIn) GetNewpassword() string {
	if o == nil || IsNil(o.Newpassword) {
		var ret string
		return ret
	}
	return *o.Newpassword
}

// GetNewpasswordOk returns a tuple with the Newpassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordRequestLoggedIn) GetNewpasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Newpassword) {
		return nil, false
	}
	return o.Newpassword, true
}

// HasNewpassword returns a boolean if a field has been set.
func (o *ChangePasswordRequestLoggedIn) HasNewpassword() bool {
	if o != nil && !IsNil(o.Newpassword) {
		return true
	}

	return false
}

// SetNewpassword gets a reference to the given string and assigns it to the Newpassword field.
func (o *ChangePasswordRequestLoggedIn) SetNewpassword(v string) {
	o.Newpassword = &v
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *ChangePasswordRequestLoggedIn) GetOldPassword() string {
	if o == nil || IsNil(o.OldPassword) {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordRequestLoggedIn) GetOldPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OldPassword) {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *ChangePasswordRequestLoggedIn) HasOldPassword() bool {
	if o != nil && !IsNil(o.OldPassword) {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *ChangePasswordRequestLoggedIn) SetOldPassword(v string) {
	o.OldPassword = &v
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *ChangePasswordRequestLoggedIn) GetNewPassword() string {
	if o == nil || IsNil(o.NewPassword) {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordRequestLoggedIn) GetNewPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.NewPassword) {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *ChangePasswordRequestLoggedIn) HasNewPassword() bool {
	if o != nil && !IsNil(o.NewPassword) {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *ChangePasswordRequestLoggedIn) SetNewPassword(v string) {
	o.NewPassword = &v
}

func (o ChangePasswordRequestLoggedIn) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePasswordRequestLoggedIn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Oldpassword) {
		toSerialize["oldpassword"] = o.Oldpassword
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Newpassword) {
		toSerialize["newpassword"] = o.Newpassword
	}
	if !IsNil(o.OldPassword) {
		toSerialize["oldPassword"] = o.OldPassword
	}
	if !IsNil(o.NewPassword) {
		toSerialize["newPassword"] = o.NewPassword
	}
	return toSerialize, nil
}

type NullableChangePasswordRequestLoggedIn struct {
	value *ChangePasswordRequestLoggedIn
	isSet bool
}

func (v NullableChangePasswordRequestLoggedIn) Get() *ChangePasswordRequestLoggedIn {
	return v.value
}

func (v *NullableChangePasswordRequestLoggedIn) Set(val *ChangePasswordRequestLoggedIn) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePasswordRequestLoggedIn) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePasswordRequestLoggedIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePasswordRequestLoggedIn(val *ChangePasswordRequestLoggedIn) *NullableChangePasswordRequestLoggedIn {
	return &NullableChangePasswordRequestLoggedIn{value: val, isSet: true}
}

func (v NullableChangePasswordRequestLoggedIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePasswordRequestLoggedIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
