/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 8d1ee8c4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChangePasswordApproveRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangePasswordApproveRequest{}

// ChangePasswordApproveRequest struct for ChangePasswordApproveRequest
type ChangePasswordApproveRequest struct {
	Password *string `json:"password,omitempty"`
	Name     *string `json:"name,omitempty"`
	Guid     *string `json:"guid,omitempty"`
}

// NewChangePasswordApproveRequest instantiates a new ChangePasswordApproveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePasswordApproveRequest() *ChangePasswordApproveRequest {
	this := ChangePasswordApproveRequest{}
	return &this
}

// NewChangePasswordApproveRequestWithDefaults instantiates a new ChangePasswordApproveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePasswordApproveRequestWithDefaults() *ChangePasswordApproveRequest {
	this := ChangePasswordApproveRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ChangePasswordApproveRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordApproveRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ChangePasswordApproveRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ChangePasswordApproveRequest) SetPassword(v string) {
	o.Password = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChangePasswordApproveRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordApproveRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChangePasswordApproveRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChangePasswordApproveRequest) SetName(v string) {
	o.Name = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ChangePasswordApproveRequest) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePasswordApproveRequest) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *ChangePasswordApproveRequest) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ChangePasswordApproveRequest) SetGuid(v string) {
	o.Guid = &v
}

func (o ChangePasswordApproveRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangePasswordApproveRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	return toSerialize, nil
}

type NullableChangePasswordApproveRequest struct {
	value *ChangePasswordApproveRequest
	isSet bool
}

func (v NullableChangePasswordApproveRequest) Get() *ChangePasswordApproveRequest {
	return v.value
}

func (v *NullableChangePasswordApproveRequest) Set(val *ChangePasswordApproveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePasswordApproveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePasswordApproveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePasswordApproveRequest(val *ChangePasswordApproveRequest) *NullableChangePasswordApproveRequest {
	return &NullableChangePasswordApproveRequest{value: val, isSet: true}
}

func (v NullableChangePasswordApproveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePasswordApproveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
