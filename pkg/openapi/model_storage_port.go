/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - f3a04f74
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StoragePort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoragePort{}

// StoragePort struct for StoragePort
type StoragePort struct {
	Address *string `json:"address,omitempty"`
	Port    *string `json:"port,omitempty"`
}

// NewStoragePort instantiates a new StoragePort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoragePort() *StoragePort {
	this := StoragePort{}
	return &this
}

// NewStoragePortWithDefaults instantiates a new StoragePort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoragePortWithDefaults() *StoragePort {
	this := StoragePort{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *StoragePort) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoragePort) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *StoragePort) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *StoragePort) SetAddress(v string) {
	o.Address = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *StoragePort) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoragePort) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *StoragePort) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *StoragePort) SetPort(v string) {
	o.Port = &v
}

func (o StoragePort) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoragePort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableStoragePort struct {
	value *StoragePort
	isSet bool
}

func (v NullableStoragePort) Get() *StoragePort {
	return v.value
}

func (v *NullableStoragePort) Set(val *StoragePort) {
	v.value = val
	v.isSet = true
}

func (v NullableStoragePort) IsSet() bool {
	return v.isSet
}

func (v *NullableStoragePort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoragePort(val *StoragePort) *NullableStoragePort {
	return &NullableStoragePort{value: val, isSet: true}
}

func (v NullableStoragePort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoragePort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
