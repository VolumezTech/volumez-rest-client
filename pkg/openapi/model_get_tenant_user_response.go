/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 8d1ee8c4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetTenantUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantUserResponse{}

// GetTenantUserResponse struct for GetTenantUserResponse
type GetTenantUserResponse struct {
	StatusCode *int32  `json:"StatusCode,omitempty"`
	Message    *string `json:"Message,omitempty"`
	Email      *string `json:"Email,omitempty"`
	Name       *string `json:"Name,omitempty"`
	TenantID   *string `json:"TenantID,omitempty"`
}

// NewGetTenantUserResponse instantiates a new GetTenantUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantUserResponse() *GetTenantUserResponse {
	this := GetTenantUserResponse{}
	return &this
}

// NewGetTenantUserResponseWithDefaults instantiates a new GetTenantUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantUserResponseWithDefaults() *GetTenantUserResponse {
	this := GetTenantUserResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *GetTenantUserResponse) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantUserResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *GetTenantUserResponse) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *GetTenantUserResponse) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetTenantUserResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantUserResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetTenantUserResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetTenantUserResponse) SetMessage(v string) {
	o.Message = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetTenantUserResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantUserResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetTenantUserResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetTenantUserResponse) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetTenantUserResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantUserResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetTenantUserResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetTenantUserResponse) SetName(v string) {
	o.Name = &v
}

// GetTenantID returns the TenantID field value if set, zero value otherwise.
func (o *GetTenantUserResponse) GetTenantID() string {
	if o == nil || IsNil(o.TenantID) {
		var ret string
		return ret
	}
	return *o.TenantID
}

// GetTenantIDOk returns a tuple with the TenantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantUserResponse) GetTenantIDOk() (*string, bool) {
	if o == nil || IsNil(o.TenantID) {
		return nil, false
	}
	return o.TenantID, true
}

// HasTenantID returns a boolean if a field has been set.
func (o *GetTenantUserResponse) HasTenantID() bool {
	if o != nil && !IsNil(o.TenantID) {
		return true
	}

	return false
}

// SetTenantID gets a reference to the given string and assigns it to the TenantID field.
func (o *GetTenantUserResponse) SetTenantID(v string) {
	o.TenantID = &v
}

func (o GetTenantUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusCode) {
		toSerialize["StatusCode"] = o.StatusCode
	}
	if !IsNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	if !IsNil(o.Email) {
		toSerialize["Email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.TenantID) {
		toSerialize["TenantID"] = o.TenantID
	}
	return toSerialize, nil
}

type NullableGetTenantUserResponse struct {
	value *GetTenantUserResponse
	isSet bool
}

func (v NullableGetTenantUserResponse) Get() *GetTenantUserResponse {
	return v.value
}

func (v *NullableGetTenantUserResponse) Set(val *GetTenantUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantUserResponse(val *GetTenantUserResponse) *NullableGetTenantUserResponse {
	return &NullableGetTenantUserResponse{value: val, isSet: true}
}

func (v NullableGetTenantUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
