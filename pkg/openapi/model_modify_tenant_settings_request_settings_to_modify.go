/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 8d1ee8c4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModifyTenantSettingsRequestSettingsToModify type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyTenantSettingsRequestSettingsToModify{}

// ModifyTenantSettingsRequestSettingsToModify struct for ModifyTenantSettingsRequestSettingsToModify
type ModifyTenantSettingsRequestSettingsToModify struct {
	Support NullableGetTenantSettingsResponseSupport `json:"support,omitempty"`
}

// NewModifyTenantSettingsRequestSettingsToModify instantiates a new ModifyTenantSettingsRequestSettingsToModify object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyTenantSettingsRequestSettingsToModify() *ModifyTenantSettingsRequestSettingsToModify {
	this := ModifyTenantSettingsRequestSettingsToModify{}
	return &this
}

// NewModifyTenantSettingsRequestSettingsToModifyWithDefaults instantiates a new ModifyTenantSettingsRequestSettingsToModify object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyTenantSettingsRequestSettingsToModifyWithDefaults() *ModifyTenantSettingsRequestSettingsToModify {
	this := ModifyTenantSettingsRequestSettingsToModify{}
	return &this
}

// GetSupport returns the Support field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModifyTenantSettingsRequestSettingsToModify) GetSupport() GetTenantSettingsResponseSupport {
	if o == nil || IsNil(o.Support.Get()) {
		var ret GetTenantSettingsResponseSupport
		return ret
	}
	return *o.Support.Get()
}

// GetSupportOk returns a tuple with the Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModifyTenantSettingsRequestSettingsToModify) GetSupportOk() (*GetTenantSettingsResponseSupport, bool) {
	if o == nil {
		return nil, false
	}
	return o.Support.Get(), o.Support.IsSet()
}

// HasSupport returns a boolean if a field has been set.
func (o *ModifyTenantSettingsRequestSettingsToModify) HasSupport() bool {
	if o != nil && o.Support.IsSet() {
		return true
	}

	return false
}

// SetSupport gets a reference to the given NullableGetTenantSettingsResponseSupport and assigns it to the Support field.
func (o *ModifyTenantSettingsRequestSettingsToModify) SetSupport(v GetTenantSettingsResponseSupport) {
	o.Support.Set(&v)
}

// SetSupportNil sets the value for Support to be an explicit nil
func (o *ModifyTenantSettingsRequestSettingsToModify) SetSupportNil() {
	o.Support.Set(nil)
}

// UnsetSupport ensures that no value is present for Support, not even an explicit nil
func (o *ModifyTenantSettingsRequestSettingsToModify) UnsetSupport() {
	o.Support.Unset()
}

func (o ModifyTenantSettingsRequestSettingsToModify) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyTenantSettingsRequestSettingsToModify) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Support.IsSet() {
		toSerialize["support"] = o.Support.Get()
	}
	return toSerialize, nil
}

type NullableModifyTenantSettingsRequestSettingsToModify struct {
	value *ModifyTenantSettingsRequestSettingsToModify
	isSet bool
}

func (v NullableModifyTenantSettingsRequestSettingsToModify) Get() *ModifyTenantSettingsRequestSettingsToModify {
	return v.value
}

func (v *NullableModifyTenantSettingsRequestSettingsToModify) Set(val *ModifyTenantSettingsRequestSettingsToModify) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyTenantSettingsRequestSettingsToModify) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyTenantSettingsRequestSettingsToModify) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyTenantSettingsRequestSettingsToModify(val *ModifyTenantSettingsRequestSettingsToModify) *NullableModifyTenantSettingsRequestSettingsToModify {
	return &NullableModifyTenantSettingsRequestSettingsToModify{value: val, isSet: true}
}

func (v NullableModifyTenantSettingsRequestSettingsToModify) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyTenantSettingsRequestSettingsToModify) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
