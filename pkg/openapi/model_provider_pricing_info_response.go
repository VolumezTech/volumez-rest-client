/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 9cdeb26f
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProviderPricingInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProviderPricingInfoResponse{}

// ProviderPricingInfoResponse struct for ProviderPricingInfoResponse
type ProviderPricingInfoResponse struct {
	TotalPriceList []ProviderPriceItem `json:"totalPriceList"`
}

type _ProviderPricingInfoResponse ProviderPricingInfoResponse

// NewProviderPricingInfoResponse instantiates a new ProviderPricingInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProviderPricingInfoResponse(totalPriceList []ProviderPriceItem) *ProviderPricingInfoResponse {
	this := ProviderPricingInfoResponse{}
	this.TotalPriceList = totalPriceList
	return &this
}

// NewProviderPricingInfoResponseWithDefaults instantiates a new ProviderPricingInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProviderPricingInfoResponseWithDefaults() *ProviderPricingInfoResponse {
	this := ProviderPricingInfoResponse{}
	return &this
}

// GetTotalPriceList returns the TotalPriceList field value
func (o *ProviderPricingInfoResponse) GetTotalPriceList() []ProviderPriceItem {
	if o == nil {
		var ret []ProviderPriceItem
		return ret
	}

	return o.TotalPriceList
}

// GetTotalPriceListOk returns a tuple with the TotalPriceList field value
// and a boolean to check if the value has been set.
func (o *ProviderPricingInfoResponse) GetTotalPriceListOk() ([]ProviderPriceItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalPriceList, true
}

// SetTotalPriceList sets field value
func (o *ProviderPricingInfoResponse) SetTotalPriceList(v []ProviderPriceItem) {
	o.TotalPriceList = v
}

func (o ProviderPricingInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProviderPricingInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["totalPriceList"] = o.TotalPriceList
	return toSerialize, nil
}

func (o *ProviderPricingInfoResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"totalPriceList",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProviderPricingInfoResponse := _ProviderPricingInfoResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProviderPricingInfoResponse)

	if err != nil {
		return err
	}

	*o = ProviderPricingInfoResponse(varProviderPricingInfoResponse)

	return err
}

type NullableProviderPricingInfoResponse struct {
	value *ProviderPricingInfoResponse
	isSet bool
}

func (v NullableProviderPricingInfoResponse) Get() *ProviderPricingInfoResponse {
	return v.value
}

func (v *NullableProviderPricingInfoResponse) Set(val *ProviderPricingInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProviderPricingInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProviderPricingInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProviderPricingInfoResponse(val *ProviderPricingInfoResponse) *NullableProviderPricingInfoResponse {
	return &NullableProviderPricingInfoResponse{value: val, isSet: true}
}

func (v NullableProviderPricingInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProviderPricingInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
