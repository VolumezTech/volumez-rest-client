/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MachineInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineInfo{}

// MachineInfo struct for MachineInfo
type MachineInfo struct {
	Instanceid     *string  `json:"instanceid,omitempty"`
	Instancetype   *string  `json:"instancetype,omitempty"`
	Controladdress *string  `json:"controladdress,omitempty"`
	Imageid        *string  `json:"imageid,omitempty"`
	Zone           *string  `json:"zone,omitempty"`
	Sha            *string  `json:"sha,omitempty"`
	Env            *string  `json:"env,omitempty"`
	Pk             []string `json:"pk,omitempty"`
}

// NewMachineInfo instantiates a new MachineInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineInfo() *MachineInfo {
	this := MachineInfo{}
	return &this
}

// NewMachineInfoWithDefaults instantiates a new MachineInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineInfoWithDefaults() *MachineInfo {
	this := MachineInfo{}
	return &this
}

// GetInstanceid returns the Instanceid field value if set, zero value otherwise.
func (o *MachineInfo) GetInstanceid() string {
	if o == nil || IsNil(o.Instanceid) {
		var ret string
		return ret
	}
	return *o.Instanceid
}

// GetInstanceidOk returns a tuple with the Instanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetInstanceidOk() (*string, bool) {
	if o == nil || IsNil(o.Instanceid) {
		return nil, false
	}
	return o.Instanceid, true
}

// HasInstanceid returns a boolean if a field has been set.
func (o *MachineInfo) HasInstanceid() bool {
	if o != nil && !IsNil(o.Instanceid) {
		return true
	}

	return false
}

// SetInstanceid gets a reference to the given string and assigns it to the Instanceid field.
func (o *MachineInfo) SetInstanceid(v string) {
	o.Instanceid = &v
}

// GetInstancetype returns the Instancetype field value if set, zero value otherwise.
func (o *MachineInfo) GetInstancetype() string {
	if o == nil || IsNil(o.Instancetype) {
		var ret string
		return ret
	}
	return *o.Instancetype
}

// GetInstancetypeOk returns a tuple with the Instancetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetInstancetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Instancetype) {
		return nil, false
	}
	return o.Instancetype, true
}

// HasInstancetype returns a boolean if a field has been set.
func (o *MachineInfo) HasInstancetype() bool {
	if o != nil && !IsNil(o.Instancetype) {
		return true
	}

	return false
}

// SetInstancetype gets a reference to the given string and assigns it to the Instancetype field.
func (o *MachineInfo) SetInstancetype(v string) {
	o.Instancetype = &v
}

// GetControladdress returns the Controladdress field value if set, zero value otherwise.
func (o *MachineInfo) GetControladdress() string {
	if o == nil || IsNil(o.Controladdress) {
		var ret string
		return ret
	}
	return *o.Controladdress
}

// GetControladdressOk returns a tuple with the Controladdress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetControladdressOk() (*string, bool) {
	if o == nil || IsNil(o.Controladdress) {
		return nil, false
	}
	return o.Controladdress, true
}

// HasControladdress returns a boolean if a field has been set.
func (o *MachineInfo) HasControladdress() bool {
	if o != nil && !IsNil(o.Controladdress) {
		return true
	}

	return false
}

// SetControladdress gets a reference to the given string and assigns it to the Controladdress field.
func (o *MachineInfo) SetControladdress(v string) {
	o.Controladdress = &v
}

// GetImageid returns the Imageid field value if set, zero value otherwise.
func (o *MachineInfo) GetImageid() string {
	if o == nil || IsNil(o.Imageid) {
		var ret string
		return ret
	}
	return *o.Imageid
}

// GetImageidOk returns a tuple with the Imageid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetImageidOk() (*string, bool) {
	if o == nil || IsNil(o.Imageid) {
		return nil, false
	}
	return o.Imageid, true
}

// HasImageid returns a boolean if a field has been set.
func (o *MachineInfo) HasImageid() bool {
	if o != nil && !IsNil(o.Imageid) {
		return true
	}

	return false
}

// SetImageid gets a reference to the given string and assigns it to the Imageid field.
func (o *MachineInfo) SetImageid(v string) {
	o.Imageid = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *MachineInfo) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *MachineInfo) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *MachineInfo) SetZone(v string) {
	o.Zone = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *MachineInfo) GetSha() string {
	if o == nil || IsNil(o.Sha) {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetShaOk() (*string, bool) {
	if o == nil || IsNil(o.Sha) {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *MachineInfo) HasSha() bool {
	if o != nil && !IsNil(o.Sha) {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *MachineInfo) SetSha(v string) {
	o.Sha = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *MachineInfo) GetEnv() string {
	if o == nil || IsNil(o.Env) {
		var ret string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetEnvOk() (*string, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *MachineInfo) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given string and assigns it to the Env field.
func (o *MachineInfo) SetEnv(v string) {
	o.Env = &v
}

// GetPk returns the Pk field value if set, zero value otherwise.
func (o *MachineInfo) GetPk() []string {
	if o == nil || IsNil(o.Pk) {
		var ret []string
		return ret
	}
	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineInfo) GetPkOk() ([]string, bool) {
	if o == nil || IsNil(o.Pk) {
		return nil, false
	}
	return o.Pk, true
}

// HasPk returns a boolean if a field has been set.
func (o *MachineInfo) HasPk() bool {
	if o != nil && !IsNil(o.Pk) {
		return true
	}

	return false
}

// SetPk gets a reference to the given []string and assigns it to the Pk field.
func (o *MachineInfo) SetPk(v []string) {
	o.Pk = v
}

func (o MachineInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instanceid) {
		toSerialize["instanceid"] = o.Instanceid
	}
	if !IsNil(o.Instancetype) {
		toSerialize["instancetype"] = o.Instancetype
	}
	if !IsNil(o.Controladdress) {
		toSerialize["controladdress"] = o.Controladdress
	}
	if !IsNil(o.Imageid) {
		toSerialize["imageid"] = o.Imageid
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Sha) {
		toSerialize["sha"] = o.Sha
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Pk) {
		toSerialize["pk"] = o.Pk
	}
	return toSerialize, nil
}

type NullableMachineInfo struct {
	value *MachineInfo
	isSet bool
}

func (v NullableMachineInfo) Get() *MachineInfo {
	return v.value
}

func (v *NullableMachineInfo) Set(val *MachineInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineInfo(val *MachineInfo) *NullableMachineInfo {
	return &NullableMachineInfo{value: val, isSet: true}
}

func (v NullableMachineInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
