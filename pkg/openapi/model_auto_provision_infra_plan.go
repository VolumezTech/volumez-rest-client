/*
Volumez API

Volumez orchestrator API

API version: 1.0.0 - 8d1ee8c4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AutoProvisionInfraPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoProvisionInfraPlan{}

// AutoProvisionInfraPlan struct for AutoProvisionInfraPlan
type AutoProvisionInfraPlan struct {
	InstanceType      *string  `json:"instanceType,omitempty"`
	InstanceCount     *int32   `json:"instanceCount,omitempty"`
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
	OsType            *string  `json:"osType,omitempty"`
	Price             *int32   `json:"price,omitempty"`
}

// NewAutoProvisionInfraPlan instantiates a new AutoProvisionInfraPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoProvisionInfraPlan() *AutoProvisionInfraPlan {
	this := AutoProvisionInfraPlan{}
	return &this
}

// NewAutoProvisionInfraPlanWithDefaults instantiates a new AutoProvisionInfraPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoProvisionInfraPlanWithDefaults() *AutoProvisionInfraPlan {
	this := AutoProvisionInfraPlan{}
	return &this
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *AutoProvisionInfraPlan) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionInfraPlan) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *AutoProvisionInfraPlan) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *AutoProvisionInfraPlan) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInstanceCount returns the InstanceCount field value if set, zero value otherwise.
func (o *AutoProvisionInfraPlan) GetInstanceCount() int32 {
	if o == nil || IsNil(o.InstanceCount) {
		var ret int32
		return ret
	}
	return *o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionInfraPlan) GetInstanceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InstanceCount) {
		return nil, false
	}
	return o.InstanceCount, true
}

// HasInstanceCount returns a boolean if a field has been set.
func (o *AutoProvisionInfraPlan) HasInstanceCount() bool {
	if o != nil && !IsNil(o.InstanceCount) {
		return true
	}

	return false
}

// SetInstanceCount gets a reference to the given int32 and assigns it to the InstanceCount field.
func (o *AutoProvisionInfraPlan) SetInstanceCount(v int32) {
	o.InstanceCount = &v
}

// GetAvailabilityZones returns the AvailabilityZones field value if set, zero value otherwise.
func (o *AutoProvisionInfraPlan) GetAvailabilityZones() []string {
	if o == nil || IsNil(o.AvailabilityZones) {
		var ret []string
		return ret
	}
	return o.AvailabilityZones
}

// GetAvailabilityZonesOk returns a tuple with the AvailabilityZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionInfraPlan) GetAvailabilityZonesOk() ([]string, bool) {
	if o == nil || IsNil(o.AvailabilityZones) {
		return nil, false
	}
	return o.AvailabilityZones, true
}

// HasAvailabilityZones returns a boolean if a field has been set.
func (o *AutoProvisionInfraPlan) HasAvailabilityZones() bool {
	if o != nil && !IsNil(o.AvailabilityZones) {
		return true
	}

	return false
}

// SetAvailabilityZones gets a reference to the given []string and assigns it to the AvailabilityZones field.
func (o *AutoProvisionInfraPlan) SetAvailabilityZones(v []string) {
	o.AvailabilityZones = v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *AutoProvisionInfraPlan) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionInfraPlan) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *AutoProvisionInfraPlan) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *AutoProvisionInfraPlan) SetOsType(v string) {
	o.OsType = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AutoProvisionInfraPlan) GetPrice() int32 {
	if o == nil || IsNil(o.Price) {
		var ret int32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoProvisionInfraPlan) GetPriceOk() (*int32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AutoProvisionInfraPlan) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int32 and assigns it to the Price field.
func (o *AutoProvisionInfraPlan) SetPrice(v int32) {
	o.Price = &v
}

func (o AutoProvisionInfraPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoProvisionInfraPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceType) {
		toSerialize["instanceType"] = o.InstanceType
	}
	if !IsNil(o.InstanceCount) {
		toSerialize["instanceCount"] = o.InstanceCount
	}
	if !IsNil(o.AvailabilityZones) {
		toSerialize["availabilityZones"] = o.AvailabilityZones
	}
	if !IsNil(o.OsType) {
		toSerialize["osType"] = o.OsType
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableAutoProvisionInfraPlan struct {
	value *AutoProvisionInfraPlan
	isSet bool
}

func (v NullableAutoProvisionInfraPlan) Get() *AutoProvisionInfraPlan {
	return v.value
}

func (v *NullableAutoProvisionInfraPlan) Set(val *AutoProvisionInfraPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoProvisionInfraPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoProvisionInfraPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoProvisionInfraPlan(val *AutoProvisionInfraPlan) *NullableAutoProvisionInfraPlan {
	return &NullableAutoProvisionInfraPlan{value: val, isSet: true}
}

func (v NullableAutoProvisionInfraPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoProvisionInfraPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
