/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TenantCreateAdminUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantCreateAdminUserRequest{}

// TenantCreateAdminUserRequest struct for TenantCreateAdminUserRequest
type TenantCreateAdminUserRequest struct {
	Email         string  `json:"email"`
	Password      string  `json:"password"`
	Name          string  `json:"name"`
	Cloudprovider *string `json:"cloudprovider,omitempty"`
	Markettoken   *string `json:"markettoken,omitempty"`
}

type _TenantCreateAdminUserRequest TenantCreateAdminUserRequest

// NewTenantCreateAdminUserRequest instantiates a new TenantCreateAdminUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantCreateAdminUserRequest(email string, password string, name string) *TenantCreateAdminUserRequest {
	this := TenantCreateAdminUserRequest{}
	this.Email = email
	this.Password = password
	this.Name = name
	return &this
}

// NewTenantCreateAdminUserRequestWithDefaults instantiates a new TenantCreateAdminUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantCreateAdminUserRequestWithDefaults() *TenantCreateAdminUserRequest {
	this := TenantCreateAdminUserRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *TenantCreateAdminUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *TenantCreateAdminUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *TenantCreateAdminUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *TenantCreateAdminUserRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *TenantCreateAdminUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *TenantCreateAdminUserRequest) SetPassword(v string) {
	o.Password = v
}

// GetName returns the Name field value
func (o *TenantCreateAdminUserRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TenantCreateAdminUserRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TenantCreateAdminUserRequest) SetName(v string) {
	o.Name = v
}

// GetCloudprovider returns the Cloudprovider field value if set, zero value otherwise.
func (o *TenantCreateAdminUserRequest) GetCloudprovider() string {
	if o == nil || IsNil(o.Cloudprovider) {
		var ret string
		return ret
	}
	return *o.Cloudprovider
}

// GetCloudproviderOk returns a tuple with the Cloudprovider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCreateAdminUserRequest) GetCloudproviderOk() (*string, bool) {
	if o == nil || IsNil(o.Cloudprovider) {
		return nil, false
	}
	return o.Cloudprovider, true
}

// HasCloudprovider returns a boolean if a field has been set.
func (o *TenantCreateAdminUserRequest) HasCloudprovider() bool {
	if o != nil && !IsNil(o.Cloudprovider) {
		return true
	}

	return false
}

// SetCloudprovider gets a reference to the given string and assigns it to the Cloudprovider field.
func (o *TenantCreateAdminUserRequest) SetCloudprovider(v string) {
	o.Cloudprovider = &v
}

// GetMarkettoken returns the Markettoken field value if set, zero value otherwise.
func (o *TenantCreateAdminUserRequest) GetMarkettoken() string {
	if o == nil || IsNil(o.Markettoken) {
		var ret string
		return ret
	}
	return *o.Markettoken
}

// GetMarkettokenOk returns a tuple with the Markettoken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCreateAdminUserRequest) GetMarkettokenOk() (*string, bool) {
	if o == nil || IsNil(o.Markettoken) {
		return nil, false
	}
	return o.Markettoken, true
}

// HasMarkettoken returns a boolean if a field has been set.
func (o *TenantCreateAdminUserRequest) HasMarkettoken() bool {
	if o != nil && !IsNil(o.Markettoken) {
		return true
	}

	return false
}

// SetMarkettoken gets a reference to the given string and assigns it to the Markettoken field.
func (o *TenantCreateAdminUserRequest) SetMarkettoken(v string) {
	o.Markettoken = &v
}

func (o TenantCreateAdminUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantCreateAdminUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	toSerialize["name"] = o.Name
	if !IsNil(o.Cloudprovider) {
		toSerialize["cloudprovider"] = o.Cloudprovider
	}
	if !IsNil(o.Markettoken) {
		toSerialize["markettoken"] = o.Markettoken
	}
	return toSerialize, nil
}

func (o *TenantCreateAdminUserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"password",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantCreateAdminUserRequest := _TenantCreateAdminUserRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantCreateAdminUserRequest)

	if err != nil {
		return err
	}

	*o = TenantCreateAdminUserRequest(varTenantCreateAdminUserRequest)

	return err
}

type NullableTenantCreateAdminUserRequest struct {
	value *TenantCreateAdminUserRequest
	isSet bool
}

func (v NullableTenantCreateAdminUserRequest) Get() *TenantCreateAdminUserRequest {
	return v.value
}

func (v *NullableTenantCreateAdminUserRequest) Set(val *TenantCreateAdminUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantCreateAdminUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantCreateAdminUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantCreateAdminUserRequest(val *TenantCreateAdminUserRequest) *NullableTenantCreateAdminUserRequest {
	return &NullableTenantCreateAdminUserRequest{value: val, isSet: true}
}

func (v NullableTenantCreateAdminUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantCreateAdminUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
