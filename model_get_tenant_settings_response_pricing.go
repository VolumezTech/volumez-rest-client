/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the GetTenantSettingsResponsePricing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantSettingsResponsePricing{}

// GetTenantSettingsResponsePricing struct for GetTenantSettingsResponsePricing
type GetTenantSettingsResponsePricing struct {
	PriceUnit NullableFloat64 `json:"priceUnit,omitempty"`
}

// NewGetTenantSettingsResponsePricing instantiates a new GetTenantSettingsResponsePricing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantSettingsResponsePricing() *GetTenantSettingsResponsePricing {
	this := GetTenantSettingsResponsePricing{}
	return &this
}

// NewGetTenantSettingsResponsePricingWithDefaults instantiates a new GetTenantSettingsResponsePricing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantSettingsResponsePricingWithDefaults() *GetTenantSettingsResponsePricing {
	this := GetTenantSettingsResponsePricing{}
	return &this
}

// GetPriceUnit returns the PriceUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetTenantSettingsResponsePricing) GetPriceUnit() float64 {
	if o == nil || IsNil(o.PriceUnit.Get()) {
		var ret float64
		return ret
	}
	return *o.PriceUnit.Get()
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetTenantSettingsResponsePricing) GetPriceUnitOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PriceUnit.Get(), o.PriceUnit.IsSet()
}

// HasPriceUnit returns a boolean if a field has been set.
func (o *GetTenantSettingsResponsePricing) HasPriceUnit() bool {
	if o != nil && o.PriceUnit.IsSet() {
		return true
	}

	return false
}

// SetPriceUnit gets a reference to the given NullableFloat64 and assigns it to the PriceUnit field.
func (o *GetTenantSettingsResponsePricing) SetPriceUnit(v float64) {
	o.PriceUnit.Set(&v)
}

// SetPriceUnitNil sets the value for PriceUnit to be an explicit nil
func (o *GetTenantSettingsResponsePricing) SetPriceUnitNil() {
	o.PriceUnit.Set(nil)
}

// UnsetPriceUnit ensures that no value is present for PriceUnit, not even an explicit nil
func (o *GetTenantSettingsResponsePricing) UnsetPriceUnit() {
	o.PriceUnit.Unset()
}

func (o GetTenantSettingsResponsePricing) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantSettingsResponsePricing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PriceUnit.IsSet() {
		toSerialize["priceUnit"] = o.PriceUnit.Get()
	}
	return toSerialize, nil
}

type NullableGetTenantSettingsResponsePricing struct {
	value *GetTenantSettingsResponsePricing
	isSet bool
}

func (v NullableGetTenantSettingsResponsePricing) Get() *GetTenantSettingsResponsePricing {
	return v.value
}

func (v *NullableGetTenantSettingsResponsePricing) Set(val *GetTenantSettingsResponsePricing) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantSettingsResponsePricing) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantSettingsResponsePricing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantSettingsResponsePricing(val *GetTenantSettingsResponsePricing) *NullableGetTenantSettingsResponsePricing {
	return &NullableGetTenantSettingsResponsePricing{value: val, isSet: true}
}

func (v NullableGetTenantSettingsResponsePricing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantSettingsResponsePricing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
