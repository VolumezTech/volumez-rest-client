/*
GitHub

Volumez orchestrator API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package volumezopenapiclient

import (
	"encoding/json"
)

// checks if the GetVmRegionZonesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetVmRegionZonesResponse{}

// GetVmRegionZonesResponse struct for GetVmRegionZonesResponse
type GetVmRegionZonesResponse struct {
	Aws   *map[string][]string      `json:"aws,omitempty"`
	Azure *map[string]AzureVMRegion `json:"azure,omitempty"`
}

// NewGetVmRegionZonesResponse instantiates a new GetVmRegionZonesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVmRegionZonesResponse() *GetVmRegionZonesResponse {
	this := GetVmRegionZonesResponse{}
	return &this
}

// NewGetVmRegionZonesResponseWithDefaults instantiates a new GetVmRegionZonesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVmRegionZonesResponseWithDefaults() *GetVmRegionZonesResponse {
	this := GetVmRegionZonesResponse{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *GetVmRegionZonesResponse) GetAws() map[string][]string {
	if o == nil || IsNil(o.Aws) {
		var ret map[string][]string
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVmRegionZonesResponse) GetAwsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *GetVmRegionZonesResponse) HasAws() bool {
	if o != nil && !IsNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given map[string][]string and assigns it to the Aws field.
func (o *GetVmRegionZonesResponse) SetAws(v map[string][]string) {
	o.Aws = &v
}

// GetAzure returns the Azure field value if set, zero value otherwise.
func (o *GetVmRegionZonesResponse) GetAzure() map[string]AzureVMRegion {
	if o == nil || IsNil(o.Azure) {
		var ret map[string]AzureVMRegion
		return ret
	}
	return *o.Azure
}

// GetAzureOk returns a tuple with the Azure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVmRegionZonesResponse) GetAzureOk() (*map[string]AzureVMRegion, bool) {
	if o == nil || IsNil(o.Azure) {
		return nil, false
	}
	return o.Azure, true
}

// HasAzure returns a boolean if a field has been set.
func (o *GetVmRegionZonesResponse) HasAzure() bool {
	if o != nil && !IsNil(o.Azure) {
		return true
	}

	return false
}

// SetAzure gets a reference to the given map[string]AzureVMRegion and assigns it to the Azure field.
func (o *GetVmRegionZonesResponse) SetAzure(v map[string]AzureVMRegion) {
	o.Azure = &v
}

func (o GetVmRegionZonesResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetVmRegionZonesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	if !IsNil(o.Azure) {
		toSerialize["azure"] = o.Azure
	}
	return toSerialize, nil
}

type NullableGetVmRegionZonesResponse struct {
	value *GetVmRegionZonesResponse
	isSet bool
}

func (v NullableGetVmRegionZonesResponse) Get() *GetVmRegionZonesResponse {
	return v.value
}

func (v *NullableGetVmRegionZonesResponse) Set(val *GetVmRegionZonesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVmRegionZonesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVmRegionZonesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVmRegionZonesResponse(val *GetVmRegionZonesResponse) *NullableGetVmRegionZonesResponse {
	return &NullableGetVmRegionZonesResponse{value: val, isSet: true}
}

func (v NullableGetVmRegionZonesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVmRegionZonesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
